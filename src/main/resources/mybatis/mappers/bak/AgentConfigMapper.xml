<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AgentConfigMapper">
	<insert id="INSERT_AGENT_INFO" parameterType="com.b2en.integration.aster.model.system.agent.AgentConfig">
		/* [AgentConfigMapper.INSERT_AGENT_INFO] 에이전트 정보 등록 */
		INSERT INTO AGENT_INFO(
			AGENT_SEQ
			,AGENT_ID
			,AGENT_NO
			,AGENT_NM
			,AGENT_SE
			,RELAY_AGENT_ID
			,IP
			,BROKER_PORT
			,HTTP_PORT
			,MANAGE_PORT
			,REGIST_DT
			,REGIST_ID
			,REGIST_IP
			,UPDT_DT
			,UPDT_ID
			,UPDT_IP
		) VALUES (
			#{agentSeq}
			,#{agentId}
			,#{agentNo}
			,#{agentNm}
			,#{agentSe}
			,#{relayAgentId}
			,#{ip}
			,#{brokerPort}
			,#{httpPort}
			,#{managePort}
			,#{registDt}
			,#{registId}
			,#{registIp}
			,#{updtDt}
			,#{updtId}
			,#{updtIp}
		)
	</insert>
	<update id="UPDATE_AGENT_INFO" parameterType="com.b2en.integration.aster.model.system.agent.AgentConfig">
		/* [AgentConfigMapper.UPDATE_AGENT_INFO] 에이전트 정보 수정 */
		UPDATE AGENT_INFO SET
			AGENT_NM = #{agentNm}
			,RELAY_AGENT_ID = #{relayAgentId}
			,IP = #{ip}
			,BROKER_PORT = #{brokerPort}
			,HTTP_PORT = #{httpPort}
			,MANAGE_PORT = #{managePort}
			,UPDT_DT = #{updtDt}
			,UPDT_ID = #{updtId}
			,UPDT_IP = #{updtIp}
		WHERE AGENT_SEQ = #{agentSeq}
	</update>
	<delete id="DELETE_AGENT_INFO" parameterType="com.b2en.integration.aster.model.system.agent.AgentConfig">
		/* [AgentConfigMapper.DELETE_AGENT_INFO] 에이전트 정보 삭제 */
		DELETE FROM  AGENT_INFO
		WHERE AGENT_SEQ = #{agentSeq}
	</delete>
	<select id="SELECT_AGENT_INFO"	resultType="com.b2en.integration.aster.model.system.agent.AgentConfig">
		/* [AgentConfigMapper.SELECT_AGENT_INFO] 에이전트 정보 조회 */
		SELECT
			AGENT_SEQ
			,AGENT_SE
			,AGENT_ID
			,AGENT_NO
			,AGENT_NM
			,RELAY_AGENT_ID
			,IP
			,BROKER_PORT
			,HTTP_PORT
			,MANAGE_PORT
		FROM AGENT_INFO
		WHERE  AGENT_ID = #{agentId}
			<if test="agentNo != null">
			AND AGENT_NO = #{agentNo}
			</if>
	</select>
	<select id="SELECT_AGENT_INFO_COUNT" resultType="int">
		/* [AgentConfigMapper.SELECT_AGENT_INFO_COUNT] 에이전트 정보 등록 수 조회  */
		SELECT
			COUNT(1) CNT
		FROM AGENT_INFO
		WHERE AGENT_ID = #{agentId}
		<if test="agentNo != null">
			AND AGENT_NO = #{agentNo}
		</if>
	</select>
	<select id="SELECT_AGENT_INFO_LIST"	resultType="com.b2en.integration.aster.model.system.agent.AgentConfig">
		/* [AgentConfigMapper.SELECT_AGENT_INFO_LIST] 에이전트 정보 목록 조회 */
		SELECT
			AGENT_SEQ
			,AGENT_SE
			,AGENT_ID
			,AGENT_NO
			,AGENT_NM
			,RELAY_AGENT_ID
			,IP
			,BROKER_PORT
			,HTTP_PORT
			,MANAGE_PORT
			,REGIST_DT
			,REGIST_ID
			,REGIST_IP
			,UPDT_DT
			,UPDT_ID
			,UPDT_IP
		FROM AGENT_INFO
		WHERE 1=1
		<if test="agentId != null">
			AND AGENT_ID = #{agentId}
		</if>
		<if test="agentNo != null">
			AND AGENT_NO = #{agentNo}
		</if>
		<if test="group != null">
			AND AGENT_NO = '1'
		</if>
		ORDER BY AGENT_ID, AGENT_NO
	</select>

	<select id="SELECT_EXCLUDE_AGENT_INFO_LIST"	resultType="com.b2en.integration.aster.model.system.agent.AgentConfig">
		/* [AgentConfigMapper.SELECT_EXCLUDE_AGENT_INFO_LIST] 에이전트 정보 목록 조회 - 조건으로 특정 에이전트를 제외  */
		SELECT
			AGENT_SEQ
			,AGENT_SE
			,AGENT_ID
			,AGENT_NO
			,AGENT_NM
			,RELAY_AGENT_ID
			,IP
			,BROKER_PORT
			,HTTP_PORT
			,MANAGE_PORT
			,REGIST_DT
			,REGIST_ID
			,REGIST_IP
			,UPDT_DT
			,UPDT_ID
			,UPDT_IP
		FROM AGENT_INFO F
		WHERE
		<if test="excludeme eq 'Y'.toString()">
		CONCAT(AGENT_ID,AGENT_NO) != CONCAT(#{agentId},#{agentNo})
		AND AGENT_ID = #{agentId}
		</if>
		<if test="excludeme eq null">
			<if test="group eq null">
			CONCAT(AGENT_ID,AGENT_NO) != CONCAT(#{agentId},#{agentNo})
			</if>
			<if test="group eq 'Y'.toString()  ">
			AGENT_ID != #{agentId}
			AND AGENT_NO = '1'
				<if test="partnerSelect eq 'Y'.toString()  ">
				AND NOT EXISTS (SELECT 1 FROM PARTN_AGENT_INFO P WHERE P.PARTN_ID = F.AGENT_ID AND  P.AGENT_ID = #{agentId} );
				</if>
			</if>
		</if>
	</select>

	<insert id="INSERT_DATASOURCE_INFO" parameterType="com.b2en.integration.aster.model.system.datasource.RdbmsConfig">
		/* [AgentConfigMapper.INSERT_DATASOURCE_INFO] 에이전트 데이터 소스 등록 */
		INSERT INTO DATASOURCE_INFO(
			AGENT_ID
		    ,DTASRC_ID
		    ,DTASRC_NM
		    ,DATABASE_TY
		    ,DRIVER_CLASS
		    ,URL
		    ,ID
		    ,PASSWORD
		    ,CHARCR_SET
		    ,MAX_CNNC_CNT
		    ,CNNC_WAIT_TIME
			,REGIST_DT
			,REGIST_ID
			,REGIST_IP
			,UPDT_DT
			,UPDT_ID
			,UPDT_IP
		)VALUES(
			#{agentId}
		    ,#{dtasrcId}
		    ,#{dtasrcNm}
		    ,#{databaseTy}
		    ,#{driverClass}
		    ,#{url}
		    ,#{id}
		    ,#{password}
		    ,#{charcrSet}
		    ,#{maxCnncCnt}
		    ,#{cnncWaitTime}
			,#{registDt}
			,#{registId}
			,#{registIp}
			,#{updtDt}
			,#{updtId}
			,#{updtIp}
		)
	</insert>
	<update id="UPDATE_DATASOURCE_INFO" parameterType="com.b2en.integration.aster.model.system.datasource.RdbmsConfig">
		/* [AgentConfigMapper.UPDATE_DATASOURCE_INFO] 에이전트 데이터소스 수정*/
		UPDATE DATASOURCE_INFO SET
		    DTASRC_NM = #{dtasrcNm}
		    ,DATABASE_TY = #{databaseTy}
		    ,DRIVER_CLASS = #{driverClass}
		    ,URL = #{url}
		    ,ID = #{id}
		    ,PASSWORD = #{password}
		    ,CHARCR_SET = #{charcrSet}
		    ,MAX_CNNC_CNT = #{maxCnncCnt}
		    ,CNNC_WAIT_TIME = #{cnncWaitTime}
			,UPDT_DT = #{updtDt}
			,UPDT_ID = #{updtId}
			,UPDT_IP = #{updtIp}
		WHERE AGENT_ID = #{agentId}
		    AND DTASRC_ID = #{dtasrcId}
	</update>
	<delete id="DELETE_DATASOURCE_INFO" parameterType="com.b2en.integration.aster.model.system.datasource.RdbmsConfig">
		/* [AgentConfigMapper.DELETE_DATASOURCE_INFO] 에이전트 데이터소스 삭제*/
		DELETE FROM DATASOURCE_INFO
		WHERE AGENT_ID = #{agentId}
		<if test="dtasrcId != null">
			AND DTASRC_ID = #{dtasrcId}
		</if>
	</delete>
	<select id="SELECT_DATASOURCE_INFO_COUNT" resultType="int">
		/* [AgentConfigMapper.SELECT_DATASOURCE_INFO_COUNT] 에이전트 데이터소스 등록 수 조회*/
		SELECT
			COUNT(*) AS CNT
		FROM DATASOURCE_INFO
		WHERE AGENT_ID = #{agentId}
		AND DTASRC_ID = #{dtasrcId}
	</select>
	<select id="SELECT_DATASOURCE_INFO_LIST"  parameterType="com.b2en.integration.aster.model.system.datasource.RdbmsConfig" resultType="com.b2en.integration.aster.model.system.datasource.RdbmsConfig">
		/* [AgentConfigMapper.SELECT_DATASOURCE_INFO_LIST] 에이전트 데이터 소스 목록 조회 */
		SELECT
				AGENT_ID
			    ,DTASRC_ID
			    ,DTASRC_NM
			    ,DATABASE_TY
			    ,DRIVER_CLASS
			    ,URL
			    ,ID
			    ,PASSWORD
			    ,CHARCR_SET
			    ,MAX_CNNC_CNT
			    ,CNNC_WAIT_TIME
				,REGIST_DT
				,REGIST_ID
				,REGIST_IP
				,UPDT_DT
				,UPDT_ID
				,UPDT_IP
				,M.STTUS AS DSTB_STTUS
			FROM DATASOURCE_INFO S LEFT OUTER JOIN
			(
				SELECT G.TRGT_ID, V.STTUS, G.DSTB_VER
				FROM DSTB_HIST_MANAGE G,
				(
					SELECT DIST.TRGT_ID,DIST.DSTB_SEQ,
					CASE WHEN (
						SELECT COUNT(1)
						FROM DSTB_HIST_MANAGE_DETAIL DT
						WHERE DIST.DSTB_SEQ = DT.DSTB_SEQ
						AND DT.DSTB_STTUS = 'F'
						AND DT.DSTB_DETAIL_SEQ = (
							SELECT MAX(DT.DSTB_DETAIL_SEQ)
							FROM DSTB_HIST_MANAGE_DETAIL DT
							WHERE DT.DSTB_SEQ= DIST.DSTB_SEQ)
						) = 1 THEN 'F' ELSE 'S' END AS STTUS
					FROM (
								SELECT
									T.TRGT_ID,	MAX( DSTB_SEQ ) AS DSTB_SEQ
								FROM
									(
										SELECT
											A.DSTB_SEQ,
											A.TRGT_ID
										FROM
											DSTB_HIST_MANAGE A
											WHERE TRGT_SE='DATASOURCE'
									) T
								GROUP BY
									TRGT_ID
					) DIST
				) V
				WHERE G.TRGT_ID = V.TRGT_ID
				AND G.DSTB_SEQ = V.DSTB_SEQ
			) M
			ON M.TRGT_ID = S.DTASRC_ID
		WHERE 1=1
		<if test="agentId != null">
		AND AGENT_ID = #{agentId}
		</if>
		<if test="dtasrcId != null">
		AND DTASRC_ID = #{dtasrcId}
		</if>
	</select>

	<insert id="INSERT_PARTN_AGENT_INFO">
		/* [AgentConfigMapper.INSERT_PARTN_AGENT_INFO] 에이전트 파트너 정보 등록 */
		INSERT INTO PARTN_AGENT_INFO(
			AGENT_ID
			,PARTN_ID
			,RELAY_AGENT_ID
			,REGIST_DT
			,REGIST_ID
			,REGIST_IP
			,UPDT_DT
			,UPDT_ID
			,UPDT_IP
		)VALUES(
			#{agentId}
			,#{partnId}
			,#{relayAgentId}
			,#{registDt}
			,#{registId}
			,#{registIp}
			,#{updtDt}
			,#{updtId}
			,#{updtIp}
		)
	</insert>
	<update id="UPDATE_PARTN_AGENT_INFO">
		/* [AgentConfigMapper.UPDATE_PARTN_AGENT_INFO] 에이전트 파트너 정보 수정 */
		UPDATE PARTN_AGENT_INFO SET RELAY_AGENT_ID = #{relayAgentId}
		WHERE 1=1
			<if test="agentId != null">
			AND AGENT_ID = #{agentId}
			</if>
			<if test="partnId != null">
			AND PARTN_ID = #{partnId}
			</if>
	</update>
	<delete id="DELETE_PARTN_AGENT_INFO">
		/* [AgentConfigMapper.DELETE_PARTN_AGENT_INFO] 에이전트 파트너 정보 삭제*/
		DELETE FROM PARTN_AGENT_INFO
		WHERE 1=1
			<if test="agentId != null">
			AND AGENT_ID = #{agentId}
			</if>
			<if test="partnId != null">
			AND PARTN_ID = #{partnId}
			</if>
	</delete>
	<select id="SELECT_PARTN_AGENT_INFO_LIST" resultType="com.b2en.integration.aster.model.system.agent.AgentConfig">
		/* [AgentConfigMapper.SELECT_PARTN_AGENT_INFO_LIST] 특정 에이전트의 파트너로 등록된 에이전트 목록 조회*/
		SELECT
			A.AGENT_ID
			, A.AGENT_NO
			, A.AGENT_NM
			, A.AGENT_SE
			, A.IP
			, A.BROKER_PORT
			, A.HTTP_PORT
			, A.MANAGE_PORT
			, A.AGENT_SEQ
			, B.RELAY_AGENT_ID
			, B.PARTN_ID AS PARTN_ID
			, B.AGENT_ID AS PARTN_AGENT_ID
		FROM
			AGENT_INFO A, PARTN_AGENT_INFO B
		WHERE
			A.AGENT_ID = B.PARTN_ID
		<if test="agentId != null">
		AND B.AGENT_ID = #{agentId}
		</if>
		<if test="partnId != null">
		AND PARTN_ID = #{partnId}
		</if>
	</select>
	<select id="SELECT_AGENT_USE_INTRFC_LIST" parameterType="com.b2en.integration.aster.model.system.agent.AgentConfig" resultType="com.b2en.integration.aster.console.util.UpperKeyMap">
		/* [AgentConfigMapper.SELECT_AGENT_USE_INTRFC_LIST] 삭제대상 에이전트가 사용하는 인터페이스가 있는지 확인  */
		SELECT DISTINCT INTRFC_ID AS INTRFC_ID FROM RUTE_INFO_WORK WHERE AGENT_ID = #{agentId}
	</select>
	<select id="SELECT_DATASOURCE_USE_INTRFC_LIST" parameterType="com.b2en.integration.aster.model.system.datasource.RdbmsConfig" resultType="com.b2en.integration.aster.console.util.UpperKeyMap">
		/* [AgentConfigMapper.SELECT_DATASOURCE_USE_INTRFC_LIST] 삭제대상 데이터소스를 사용하는 인터페이스가 있는지 확인  */
		 SELECT
		 	DISTINCT R.INTRFC_ID AS INTRFC_ID
		 FROM
		 	DATABASE_COMPN_INFO_WORK D, RUTE_INFO_WORK R
		 WHERE D.RUTE_SEQ = R.RUTE_SEQ
		 AND DTASRC_ID = #{dtasrcId} 
		 AND R.AGENT_ID = #{agentId}
	</select>
	<select id="SELECT_HTTP_USE_INTRFC_LIST" parameterType="com.b2en.integration.aster.model.system.datasource.HttpConfig" resultType="com.b2en.integration.aster.console.util.UpperKeyMap">
		/* [AgentConfigMapper.SELECT_HTTP_USE_INTRFC_LIST] 삭제대상 데이터소스를 사용하는 인터페이스가 있는지 확인  */
		 SELECT
		 	DISTINCT R.INTRFC_ID AS INTRFC_ID
		 FROM
		 	HTTP_COMPN_INFO_WORK D, RUTE_INFO_WORK R
		 WHERE D.RUTE_SEQ = R.RUTE_SEQ
		 AND DTASRC_ID = #{dtasrcId}
	</select>
	<select id="SELECT_FTP_USE_INTRFC_LIST" parameterType="com.b2en.integration.aster.model.system.datasource.FtpConfig" resultType="com.b2en.integration.aster.console.util.UpperKeyMap">
		/* [AgentConfigMapper.SELECT_FTP_USE_INTRFC_LIST] 삭제대상 데이터소스를 사용하는 인터페이스가 있는지 확인  */
		 SELECT
		 	DISTINCT R.INTRFC_ID AS INTRFC_ID
		 FROM
		 	FTP_COMPN_INFO_WORK D, RUTE_INFO_WORK R
		 WHERE D.RUTE_SEQ = R.RUTE_SEQ
		 AND DTASRC_ID = #{dtasrcId}
	</select>
	<select id="SELECT_PARTNER_USE_INTRFC_LIST" parameterType="com.b2en.integration.aster.model.system.agent.AgentConfig" resultType="com.b2en.integration.aster.console.util.UpperKeyMap">
		/* [AgentConfigMapper.SELECT_PARTNER_USE_INTRFC_LIST] 삭제대상 파트너와 관련된 인터페이스가 있는지 확인 */
		SELECT
			DISTINCT INTRFC_ID
		FROM
			RUTE_INFO_WORK
		WHERE
			INTRFC_ID IN(
			SELECT
				INTRFC_ID
			FROM
				RUTE_INFO_WORK R
			WHERE
				R.AGENT_ID = #{agentId} )
			AND AGENT_ID = #{partnAgentId}
	</select>
	<select id="SELECT_HBASE_DATASOURCE_LIST" parameterType="com.b2en.integration.aster.model.system.datasource.HbaseConfig" resultType="com.b2en.integration.aster.model.system.datasource.HbaseConfig">
		/* [AgentConfigMapper.SELECT_HBASE_DATASOURCE_LIST] HBASE 데이터소스 목록    */
		SELECT
			AGENT_ID
			, DTASRC_ID
			, DTASRC_NM
			, OPTN_CN
			, IP
			, PORT
			, REGIST_DT
			, REGIST_ID
			, REGIST_IP
			, UPDT_DT
			, UPDT_ID
			, UPDT_IP
		FROM HBASE_DATASOURCE_INFO
		WHERE 1=1
		<if test="agentId != null">
			AND AGENT_ID = #{agentId}
		</if>
		<if test="dtasrcId != null">
			AND DTASRC_ID = #{dtasrcId}
		</if>
	</select>

	<insert id="INSERT_HBASE_DATASOURCE" parameterType="com.b2en.integration.aster.model.system.datasource.HbaseConfig">
		/* [AgentConfigMapper.INSERT_HBASE_DATASOURCE] HBASE 데이터소스 등록 */
		INSERT INTO HBASE_DATASOURCE_INFO
		(AGENT_ID, DTASRC_ID, DTASRC_NM, OPTN_CN, IP, PORT, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		VALUES(#{agentId}, #{dtasrcId}, #{dtasrcNm}, #{optnCn}, #{ip}, #{port}, #{registDt}, #{registId}, #{registIp}, #{updtDt}, #{updtId}, #{updtIp})
	</insert>

	<update id="UPDATE_HBASE_DATASOURCE" parameterType="com.b2en.integration.aster.model.system.datasource.HbaseConfig">
		/* [AgentConfigMapper.UPDATE_HBASE_DATASOURCE] HBASE 데이터소스 수정    */
		UPDATE HBASE_DATASOURCE_INFO
		SET
			DTASRC_NM=#{dtasrcNm}
			, OPTN_CN=#{optnCn}
			, IP = #{ip}
			, PORT  = #{port}
			, UPDT_DT=#{updtDt}
			, UPDT_ID=#{updtId}
			, UPDT_IP=#{updtIp}
		WHERE AGENT_ID=#{agentId}
		AND DTASRC_ID=#{dtasrcId}
	</update>

	<delete id="DELETE_HBASE_DATASOURCE" parameterType="com.b2en.integration.aster.model.system.datasource.HbaseConfig">
		/* [AgentConfigMapper.DELETE_HBASE_DATASOURCE] HBASE 데이터소스 삭제    */
		DELETE FROM  HBASE_DATASOURCE_INFO
		WHERE AGENT_ID=#{agentId}  AND DTASRC_ID=#{dtasrcId}
	</delete>
	<select id="SELECT_HBASE_DATASOURCE_USE_INTRFC_LIST" parameterType="com.b2en.integration.aster.model.system.datasource.HbaseConfig" resultType="com.b2en.integration.aster.console.util.UpperKeyMap">
		/* [AgentConfigMapper.SELECT_HBASE_DATASOURCE_USE_INTRFC_LIST] 삭제대상 HBASE 데이터소스를 사용하는 인터페이스가 있는지 확인  */
		 SELECT
		 	DISTINCT R.INTRFC_ID AS INTRFC_ID
		 FROM
		 	HBASE_COMPN_INFO D, RUTE_INFO R
		 WHERE D.RUTE_SEQ = R.RUTE_SEQ
		 AND DTASRC_ID = #{dtasrcId}
	</select>
	<select id="SELECT_HBASE_DATASOURCE_INFO_COUNT" resultType="int">
		/* [AgentConfigMapper.SELECT_HBASE_DATASOURCE_INFO_COUNT] 에이전트 HBASE 데이터소스 등록 수 조회*/
		SELECT
			COUNT(*) AS CNT
		FROM HBASE_DATASOURCE_INFO
		WHERE AGENT_ID = #{agentId}
		AND DTASRC_ID = #{dtasrcId}
	</select>
	<select id="SELECT_AGENT_FORM_CONFIG_INFO" resultType="String">
		/* [AgentConfigMapper.SELECT_AGENT_FORM_CONFIG_INFO] */
		SELECT
			CN
		FROM
			AGENT_FORM_CONFIG_INFO
		WHERE AGENT_ID = #{agentId}
			AND AGENT_NO = #{agentNo}
			AND USER_ID = #{userId }
	</select>
	<select id="INSERT_AGENT_FORM_CONFIG_INFO">
		/* [AgentConfigMapper.INSERT_AGENT_FORM_CONFIG_INFO]  */
		INSERT INTO AGENT_FORM_CONFIG_INFO (AGENT_ID, AGENT_NO, USER_ID, CN)
		VALUES(
			#{agentId}
		 	,#{agentNo}
		 	,#{userId }
		 	,#{cn}
		)
	</select>
	<delete id="DELETE_AGENT_FORM_CONFIG_INFO">
		/* [AgentConfigMapper.DELETE_AGENT_FORM_CONFIG_INFO]  */
		DELETE FROM
			AGENT_FORM_CONFIG_INFO
		WHERE AGENT_ID = #{agentId}
			AND AGENT_NO = #{agentNo}
			AND USER_ID = #{userId }
	</delete>

	<select id="SELECT_HTTP_DATASOURCE_LIST" parameterType="com.b2en.integration.aster.model.system.datasource.HttpConfig" resultType="com.b2en.integration.aster.model.system.datasource.HttpConfig">
		/* [AgentConfigMapper.SELECT_HTTP_DATASOURCE_LIST]  */
		SELECT
			AGENT_ID, DTASRC_ID, DTASRC_NM, PRTCL_SE, IP, PORT, SERVER_MODE_YN, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP
		FROM
			HTTP_DATASOURCE_INFO
		WHERE 1=1
		<if test="agentId != null">
			AND AGENT_ID = #{agentId}
		</if>
		<if test="dtasrcId != null">
			AND DTASRC_ID = #{dtasrcId}
		</if>
	</select>
	<insert id="INSERT_HTTP_DATASOURCE_INFO"  parameterType="com.b2en.integration.aster.model.system.datasource.HttpConfig">
		/* [AgentConfigMapper.INSERT_HTTP_DATASOURCE_INFO]  */
		INSERT INTO HTTP_DATASOURCE_INFO (AGENT_ID, DTASRC_ID, DTASRC_NM, PRTCL_SE, IP, PORT, SERVER_MODE_YN, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		VALUES(
			#{agentId}
			, #{dtasrcId}
			, #{dtasrcNm}
			, #{prtclSe}
			, #{ip}
			, #{port}
			, #{serverModeYn}
			, #{registDt}
			, #{registId}
			, #{registIp}
			, #{updtDt}
			, #{updtId}
			, #{updtIp}
		)
	</insert>
	<update id="UPDATE_HTTP_DATASOURCE_INFO" parameterType="com.b2en.integration.aster.model.system.datasource.HttpConfig">
		/* [AgentConfigMapper.UPDATE_HTTP_DATASOURCE_INFO]  */
		UPDATE HTTP_DATASOURCE_INFO SET
			DTASRC_NM = #{dtasrcNm}
			, PRTCL_SE = #{prtclSe}
			, IP = #{ip}
			, PORT = #{port}
			, SERVER_MODE_YN = #{serverModeYn}
			, UPDT_DT = #{updtDt}
			, UPDT_ID = #{updtId}
			, UPDT_IP = #{updtIp}
		WHERE
			AGENT_ID = #{agentId}
			AND DTASRC_ID = #{dtasrcId}
	</update>
	<delete id="DELETE_HTTP_DATASOURCE_INFO"  parameterType="com.b2en.integration.aster.model.system.datasource.HttpConfig">
		/* [AgentConfigMapper.DELETE_HTTP_DATASOURCE_INFO]  */
		DELETE FROM HTTP_DATASOURCE_INFO
		WHERE
			AGENT_ID = #{agentId}
			AND DTASRC_ID = #{dtasrcId}
	</delete>

	<select id="SELECT_FTP_DATASOURCE_LIST" parameterType="com.b2en.integration.aster.model.system.datasource.FtpConfig" resultType="com.b2en.integration.aster.model.system.datasource.FtpConfig">
		/* [AgentConfigMapper.SELECT_FTP_DATASOURCE_LIST]  */
		SELECT
			AGENT_ID, DTASRC_ID, DTASRC_NM, PRTCL_SE, IP, PORT, ID AS USERNAME, PASSWORD, SO_TIMEOUT, MXMM_RECONNECT, DISCONNECT_YN, TRANSFER_MODE_SE, FTP_SECRTY_PRTCL_SE, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP
		FROM
			FTP_DATASOURCE_INFO
		WHERE 1=1
		<if test="agentId != null">
			AND AGENT_ID = #{agentId}
		</if>
		<if test="dtasrcId != null">
			AND DTASRC_ID = #{dtasrcId}
		</if>
	</select>
	<insert id="INSERT_FTP_DATASOURCE_INFO"  parameterType="com.b2en.integration.aster.model.system.datasource.FtpConfig">
		/* [AgentConfigMapper.INSERT_FTP_DATASOURCE_INFO]  */
		INSERT INTO FTP_DATASOURCE_INFO (AGENT_ID, DTASRC_ID, DTASRC_NM, PRTCL_SE, IP, PORT, ID, PASSWORD, SO_TIMEOUT, MXMM_RECONNECT, DISCONNECT_YN, TRANSFER_MODE_SE, FTP_SECRTY_PRTCL_SE, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		VALUES(
			#{agentId}
			, #{dtasrcId}
			, #{dtasrcNm}
			, #{prtclSe}
			, #{ip}
			, #{port}
			, #{username}
			, #{password}
			, #{soTimeout}
			, #{mxmmReconnect}
			, #{disconnectYn}
			, #{transferModeSe}
			, #{ftpSecrtyPrtclSe}
			, #{registDt}
			, #{registId}
			, #{registIp}
			, #{updtDt}
			, #{updtId}
			, #{updtIp}
		)
	</insert>
	<update id="UPDATE_FTP_DATASOURCE_INFO" parameterType="com.b2en.integration.aster.model.system.datasource.FtpConfig">
		/* [AgentConfigMapper.UPDATE_FTP_DATASOURCE_INFO]  */
		UPDATE FTP_DATASOURCE_INFO SET
			DTASRC_NM = #{dtasrcNm}
			, PRTCL_SE = #{prtclSe}
			, IP = #{ip}
			, PORT = #{port}
			, ID = #{username}
			, PASSWORD = #{password}
			, SO_TIMEOUT = #{soTimeout}
			, MXMM_RECONNECT = #{mxmmReconnect}
			, DISCONNECT_YN = #{disconnectYn}
			, TRANSFER_MODE_SE = #{transferModeSe}
			, FTP_SECRTY_PRTCL_SE = #{ftpSecrtyPrtclSe}
			, UPDT_DT = #{updtDt}
			, UPDT_ID = #{updtId}
			, UPDT_IP = #{updtIp}
		WHERE
			AGENT_ID = #{agentId}
			AND DTASRC_ID = #{dtasrcId}
	</update>
	<delete id="DELETE_FTP_DATASOURCE_INFO"  parameterType="com.b2en.integration.aster.model.system.datasource.FtpConfig">
		/* [AgentConfigMapper.DELETE_FTP_DATASOURCE_INFO]  */
		DELETE FROM FTP_DATASOURCE_INFO
		WHERE
			AGENT_ID = #{agentId}
			AND DTASRC_ID = #{dtasrcId}
	</delete>
	<select id="SELECT_RELAY_CONFIG_INFO" parameterType="com.b2en.integration.aster.model.relay.ProxyConfig" resultType="com.b2en.integration.aster.model.relay.ProxyConfig">
		/* [AgentConfigMapper.SELECT_RELAY_CONFIG_INFO] 릴레이 설정 정보 조회 */
		SELECT
			AGENT_ID
			, LISTEN_PORT AS LOCAL_PORT
			, RELAY_NM AS NAME
			, FORWARD_HOST
			, FORWARD_PORT
			, REGIST_DT
			, REGIST_ID
			, REGIST_IP
			, UPDT_DT
			, UPDT_ID
			, UPDT_IP
			, LISTEN_HOST
			, TARGT_AGENT_ID
			, PORT_SE
		FROM RELAY_CONFIG_INFO
		WHERE 1=1
		<if test="agentId != null">
			AND AGENT_ID = #{agentId}
		</if>
		<if test="localPort != 0">
			AND LISTEN_PORT = #{localPort}
		</if>
		<if test="targtAgentId != null">
			AND TARGT_AGENT_ID = #{targtAgentId}
		</if>
		<if test="portSe != null">
			AND PORT_SE = #{portSe}
		</if>
		<if test="targtAgentIdLike != null">
			AND TARGT_AGENT_ID LIKE '${targtAgentIdLike}%'
		</if>
	</select>
	<insert id="INSERT_RELAY_CONFIG_INFO" parameterType="com.b2en.integration.aster.model.relay.ProxyConfig">
		/* [AgentConfigMapper.INSERT_RELAY_CONFIG_INFO] 릴레이 설정 정보 등록 */
		INSERT INTO RELAY_CONFIG_INFO(
			AGENT_ID
			, LISTEN_PORT
			, LISTEN_HOST
			, RELAY_NM
			, FORWARD_HOST
			, FORWARD_PORT
			, TARGT_AGENT_ID
			, PORT_SE
			, REGIST_DT
			, REGIST_ID
			, REGIST_IP
			, UPDT_DT
			, UPDT_ID
			, UPDT_IP
		)VALUES(
			#{agentId}
			, #{localPort}
			, #{listenHost}
			, #{name}
			, #{forwardHost}
			, #{forwardPort}
			, #{targtAgentId}
			, #{portSe}
			, #{registDt}
			, #{registId}
			, #{registIp}
			, #{updtDt}
			, #{updtId}
			, #{updtIp}
		)
	</insert>
	<update id="UPDATE_RELAY_CONFIG_INFO" parameterType="com.b2en.integration.aster.model.relay.ProxyConfig">
		/* [AgentConfigMapper.UPDATE_RELAY_CONFIG_INFO] 릴레이 설정 정보 수정 */
		UPDATE RELAY_CONFIG_INFO SET
			RELAY_NM = #{name}
			, LISTEN_HOST = #{listenHost}
			, TARGT_AGENT_ID = #{targtAgentId}
			, FORWARD_HOST = #{forwardHost}
			, FORWARD_PORT = #{forwardPort}
			, PORT_SE = #{portSe}
			, UPDT_DT = #{updtDt}
			, UPDT_ID = #{updtId}
			, UPDT_IP = #{updtIp}
		WHERE
			AGENT_ID = #{agentId}
			AND LISTEN_PORT	= #{localPort}
	</update>
	<delete id="DELETE_RELAY_CONFIG_INFO" parameterType="com.b2en.integration.aster.model.relay.ProxyConfig">
		/* [AgentConfigMapper.DELETE_RELAY_CONFIG_INFO] 릴레이 설정 정보 삭제 */
		DELETE FROM RELAY_CONFIG_INFO
		WHERE AGENT_ID = #{agentId}
			AND TARGT_AGENT_ID = #{targtAgentId}
		<if test="localPort != 0">
			AND LISTEN_PORT = #{localPort}
		</if>
	</delete>
	<select id="SELECT_RELAY_CONFIG_INFO_DISTINCT_AGENTID" parameterType="com.b2en.integration.aster.model.relay.ProxyConfig" resultType="com.b2en.integration.aster.model.relay.ProxyConfig">
		/* [AgentConfigMapper.SELECT_RELAY_CONFIG_INFO_DISTINCT_AGENTID] 릴레이 설정 정보  조회 - 릴레이 에이전트 아이디 DISTINCT */
		SELECT
			DISTINCT AGENT_ID
		FROM
			RELAY_CONFIG_INFO
		WHERE 1=1
		<if test="targtAgentIdLike != null">
			AND TARGT_AGENT_ID LIKE '${targtAgentIdLike}%'
		</if>
	</select>
	<select id="SELECT_PARTN_AGENT_INFO_ONE" resultType="com.b2en.integration.aster.model.system.agent.AgentConfig">
		/* [AgentConfigMapper.SELECT_PARTN_AGENT_INFO_ONE]  파트너 설정정보 조회 */
		SELECT
			AGENT_ID, PARTN_ID, RELAY_AGENT_ID
		FROM
			PARTN_AGENT_INFO
		WHERE RELAY_AGENT_ID = #{relayAgentId}
		AND AGENT_ID = #{agentId}
	</select>
</mapper>