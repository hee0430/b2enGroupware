<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RouteConfigMapper">
	<resultMap type="com.b2en.integration.aster.model.route.DatabaseComponentTableConfig" id="databaseComponentTableConfig">
		<result property="tblSeq" column="TBL_SEQ"/>
		<result property="compnSeq" column="COMPN_SEQ"/>
		<result property="endpntSe" column="ENDPNT_SE"/>
		<result property="tableOrder" column="TABLE_ORDER"/>
		<result property="refrnKeyNm" column="REFRN_KEY_NM"/>
		<result property="inqireSql" column="INQIRE_SQL"/>
		<result property="succesProcessSql" column="SUCCES_PROCESS_SQL"/>
	  	<result property="failrProcessSql" column="FAILR_PROCESS_SQL"/>
		<result property="ldadngTy" column="LDADNG_TY" />
		<result property="ldadngTableNm" column="LDADNG_TABLE_NM" />
		<result property="ldadngColumn" column="LDADNG_COLUMN" />
		<result property="ldadngKeyColumn" column="LDADNG_KEY_COLUMN" />
		<result property="registDt" column="REGIST_DT"/>
		<result property="registId" column="REGIST_ID" />
		<result property="registIp" column="REGIST_IP" />
		<result property="updtDt" column="UPDT_DT"/>
		<result property="updtId" column="UPDT_ID" />
		<result property="updtIp" column="UPDT_IP" />
	</resultMap>
	<resultMap type="Map" id="selectDatabaseCompnTyListMap">
		<result property="INTRFC_ID" column="INTRFC_ID"/>
		<result property="INQIRE_SQL" column="INQIRE_SQL"/>
		<result property="ENDPNT_SE" column="ENDPNT_SE"/>
		<result property="LDADNG_TABLE_NM" column="LDADNG_TABLE_NM"/>
		<result property="ROOT_DRCTRY" column="ROOT_DRCTRY"/>
		<result property="FILE_INCKS_PTTRN" column="FILE_INCKS_PTTRN"/>
		<result property="RECPTN_FILE_NM" column="RECPTN_FILE_NM"/>
		<result property="URL" column="URL"/>
	</resultMap>
	<select id="SELECT_DATASOURCE_INFO_LIST" resultType="com.b2en.integration.aster.model.system.datasource.RdbmsConfig">
		/* [RouteConfigMapper.SELECT_DATASOURCE_INFO_LIST]  데이터소스 목록 조회  */
		SELECT
			AGENT_ID,
			DTASRC_ID,
			DTASRC_NM,
			DATABASE_TY,
			DRIVER_CLASS,
			URL,
			ID,
			PASSWORD,
			CHARCR_SET,
			MAX_CNNC_CNT,
			CNNC_WAIT_TIME,
			REGIST_DT,
			REGIST_ID,
			REGIST_IP,
			UPDT_DT,
			UPDT_ID,
			UPDT_IP
		FROM DATASOURCE_INFO
		WHERE 1=1
		<if test="agentId != null">
			AND AGENT_ID = #{agentId}
		</if>
	</select>
	<select id="SELECT_SCHDUL_INFO" resultType="com.b2en.integration.aster.model.system.schedule.ScheduleConfig">
		/* [RouteConfigMapper.SELECT_SCHDUL_INFO]  스케줄 정보 조회  */
		SELECT *
		FROM SCHDUL_INFO${tablePostFix}
		WHERE EXECUT_TRGET_NM = #{intrfcId}
		AND EXECUT_TRGET_SE ='INTERFACE'
	</select>
	<select id="SELECT_SCHDUL_INFO_LIST" resultType="com.b2en.integration.aster.model.system.schedule.ScheduleConfig">
		/* [RouteConfigMapper.SELECT_SCHDUL_INFO_LIST]  스케줄 정보 목록 조회 */
		SELECT
			AGENT_ID,
			SCHDUL_ID,
			SCHDUL_NM,
			EXECUT_TRGET_SE,
			EXECUT_TRGET_NM,
			SCHDUL_EXECUT_SE,
			SECND,
			MIN,
			HOUR,
			DE,
			MT,
			DAY,
			YY,
			ACTVTY_YN
		FROM SCHDUL_INFO
		WHERE 1=1
		<if test="agentId != null">
			AND AGENT_ID = #{agentId}
		</if>
		<if test="executTrgetNm != null">
		AND EXECUT_TRGET_NM = #{executTrgetNm}
 		AND EXECUT_TRGET_SE = 'INTERFACE'
 		</if>
	</select>
	<select id="SELECT_INTRFC_INFO" resultType="com.b2en.integration.aster.model.system.interfaces.InterfaceConfig">
		/* [RouteConfigMapper.SELECT_INTRFC_INFO]  인터페이스 정보 조회 */
		SELECT
			INTRFC_ID
			,INTRFC_NM
			,INTRFC_TY
			,SYNC_YN
			,ACTVTY_YN
			,TRNSC_LOG_YN
			,MSSAGE_LOG_YN
			,LAST_DSTB_VER
			,REGIST_DT
			,REGIST_ID
			,REGIST_IP
			,UPDT_DT
			,UPDT_ID
			,UPDT_IP
			,SYNC_YN_WORK
			,ACTVTY_YN_WORK
			,TRNSC_LOG_YN_WORK
			,MSSAGE_LOG_YN_WORK
		FROM
			INTRFC_INFO
		WHERE INTRFC_ID = #{intrfcId}
		<if test="actvtyYn != null">
			AND ACTVTY_YN = #{actvtyYn}
		</if>
	</select>
	<select id="SELECT_INTRFC_INFO_LIST" resultType="com.b2en.integration.aster.model.system.interfaces.InterfaceConfig">
		/* [RouteConfigMapper.SELECT_INTRFC_INFO_LIST]  인터페이스 정보 목록 조회  */
		SELECT
			INTRFC_SEQ,
			INTRFC_ID,
			INTRFC_NM,
			INTRFC_TY,
			CASE
				WHEN D.STTUS ='S' AND LAST_DSTB_VER != D.DSTB_VER THEN 'P'
				WHEN D.STTUS ='F' AND LAST_DSTB_VER != D.DSTB_VER THEN 'F'
				ELSE D.STTUS END AS STTUS,
			SYNC_YN,
			ACTVTY_YN,
			TRNSC_LOG_YN,
			MSSAGE_LOG_YN,
			LAST_DSTB_VER,
			D.DSTB_VER,
			REGIST_DT,
			REGIST_ID,
			REGIST_IP,
			UPDT_DT,
			UPDT_ID,
			UPDT_IP,
			DSTB_SEQ,
			(SELECT RW.UPDT_DT FROM RUTE_INFO_WORK RW WHERE RW.INTRFC_ID = I.INTRFC_ID AND RW.RUTE_ORDER = 1) AS WORK_UPDT_DT
			,SYNC_YN_WORK
			,ACTVTY_YN_WORK
			,TRNSC_LOG_YN_WORK
			,MSSAGE_LOG_YN_WORK
		FROM
			INTRFC_INFO I
			LEFT OUTER JOIN(
					SELECT
						G.TRGT_ID,
						G.DSTB_SEQ,
						V.STTUS
						,CASE WHEN V.STTUS ='S' THEN G.DSTB_VER ELSE(
						<![CDATA[
							SELECT MAX(X.DSTB_VER) FROM DSTB_HIST_MANAGE X WHERE X.DSTB_VER < G.DSTB_VER
						]]>
						)END AS DSTB_VER
					FROM
						DSTB_HIST_MANAGE G,
						(
							SELECT
								DIST.TRGT_ID,
								DIST.DSTB_SEQ,
								CASE WHEN (
									SELECT COUNT(1)
									FROM DSTB_HIST_MANAGE_DETAIL DT
									WHERE DIST.DSTB_SEQ = DT.DSTB_SEQ
									AND DT.DSTB_STTUS = 'F'
									AND DT.DSTB_DETAIL_SEQ = (
										SELECT
											MAX(DT.DSTB_DETAIL_SEQ)
										FROM
											DSTB_HIST_MANAGE_DETAIL DT
										WHERE
											DT.DSTB_SEQ= DIST.DSTB_SEQ
									)
								) = 1 THEN 'F' ELSE 'S' END AS STTUS
							FROM (
								SELECT
									T.TRGT_ID,	MAX( DSTB_SEQ ) AS DSTB_SEQ
								FROM
									(
										SELECT
											A.DSTB_SEQ,
											A.TRGT_ID
										FROM
											DSTB_HIST_MANAGE A
											WHERE TRGT_SE='INTERFACE'
									) T
								GROUP BY
									TRGT_ID
							) DIST
						) V
					WHERE G.TRGT_ID = V.TRGT_ID
					AND G.DSTB_SEQ = V.DSTB_SEQ
				) D ON
				I.INTRFC_ID = D.TRGT_ID
			WHERE 1=1
			<if test="intrfcId != null">
				AND INTRFC_ID = #{intrfcId}
			</if>
		ORDER BY
			INTRFC_SEQ
	</select>
	<select id="SELECT_INTRFC_NOTIN_CTGRY_LIST" resultType="com.b2en.integration.aster.model.system.interfaces.InterfaceConfig">
	/* [RouteConfigMapper.SELECT_INTRFC_NOTIN_CTGRY_LIST] 인터페이스 목록 (카테고리 등록되지 않은 항목만) */
	SELECT
		INTRFC_SEQ, INTRFC_ID, INTRFC_NM, INTRFC_TY, SYNC_YN, ACTVTY_YN, TRNSC_LOG_YN, MSSAGE_LOG_YN, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP, LAST_DSTB_VER, INTRFC_NM ||'('|| INTRFC_ID ||')' AS INTRFC_NM_ID
	FROM
		INTRFC_INFO
	WHERE
		INTRFC_ID NOT IN(
					SELECT
				CTGRY_NM
			FROM CTGRY_CL LV1
			WHERE CTGRY_LEVEL = 1
			AND CTGRY_SEQ = 1
			AND CTGRY_SE = 'I'
			UNION ALL
			SELECT
				CTGRY_NM
			FROM CTGRY_CL LV2
			WHERE CTGRY_LEVEL = 2
			AND UPPER_CTGRY_SEQ = #{ctgrySeq}
			AND CTGRY_SE = 'I'
			UNION ALL
			SELECT
				LV3.CTGRY_NM
			FROM CTGRY_CL LV3,
				(SELECT
					CTGRY_SEQ,
					CTGRY_LEVEL,
					UPPER_CTGRY_SEQ,
					CTGRY_SE
				FROM CTGRY_CL
				WHERE CTGRY_LEVEL = '2'
				AND CTGRY_SE = 'F') LV2
			WHERE LV3.CTGRY_LEVEL = 3
			AND LV2.UPPER_CTGRY_SEQ = #{ctgrySeq}
			AND LV2.CTGRY_SEQ = LV3.UPPER_CTGRY_SEQ
			AND LV3.CTGRY_SE = 'I'
			UNION ALL
			SELECT
				LV4.CTGRY_NM
			FROM CTGRY_CL LV4,
			(SELECT
				Y.CTGRY_SEQ,
				Y.CTGRY_LEVEL,
				Y.UPPER_CTGRY_SEQ
				FROM CTGRY_CL Y,
				(SELECT
					CTGRY_SEQ,
					CTGRY_LEVEL,
					UPPER_CTGRY_SEQ,
					CTGRY_SE
				FROM CTGRY_CL
				WHERE CTGRY_LEVEL = '2'
					AND UPPER_CTGRY_SEQ = #{ctgrySeq}
					AND CTGRY_SE = 'F') LV2
				WHERE Y.CTGRY_LEVEL = '3'
				AND LV2.CTGRY_SEQ = Y.UPPER_CTGRY_SEQ
				AND LV2.CTGRY_SE = 'F'
				) LV3
			WHERE LV4.CTGRY_LEVEL = 4
			AND LV4.UPPER_CTGRY_SEQ = LV3.CTGRY_SEQ
			AND LV4.CTGRY_SE = 'I'
			UNION ALL
			SELECT
				LV5.CTGRY_NM
			FROM CTGRY_CL LV5,
			(SELECT
				LV4.CTGRY_SEQ,
				LV4.CTGRY_LEVEL,
			    LV4.UPPER_CTGRY_SEQ
			FROM CTGRY_CL LV4,
			(SELECT
				LV3.CTGRY_SEQ,
				LV3.CTGRY_LEVEL,
				LV3.UPPER_CTGRY_SEQ,
				LV3.CTGRY_SE
				FROM CTGRY_CL LV3,
				(SELECT
					CTGRY_SEQ,
					CTGRY_LEVEL,
					UPPER_CTGRY_SEQ,
					CTGRY_SE
				FROM CTGRY_CL LV2
				WHERE CTGRY_LEVEL = '2'
					AND UPPER_CTGRY_SEQ = #{ctgrySeq}
					AND CTGRY_SE = 'F') LV2
				WHERE LV3.CTGRY_LEVEL = '3'
				AND LV2.CTGRY_SEQ = LV3.UPPER_CTGRY_SEQ
				AND LV2.CTGRY_SE = 'F'
				)  LV3
				WHERE LV4.CTGRY_LEVEL = '4'
				AND LV3.CTGRY_SEQ = LV4.UPPER_CTGRY_SEQ
				AND LV3.CTGRY_SE = 'F') LV4
			WHERE LV5.CTGRY_LEVEL = 5
			AND LV5.UPPER_CTGRY_SEQ = LV4.CTGRY_SEQ
			AND LV5.CTGRY_SE = 'I'
			AND LV5.UPPER_CTGRY_SEQ = LV4.CTGRY_SEQ
			AND LV5.CTGRY_SE = 'I'
		)
	ORDER BY INTRFC_ID
	</select>
	<select id="SELECT_DATABASE_COMPN_TY_LIST" resultMap="selectDatabaseCompnTyListMap">
	SELECT
			R.INTRFC_ID,
			DT.INQIRE_SQL,
			DT.LDADNG_TABLE_NM,
			'' AS ROOT_DRCTRY,
			'' AS FILE_INCKS_PTTRN,
			'' AS RECPTN_FILE_NM,
			CASE WHEN INQIRE_SQL IS NULL THEN 'T' ELSE 'F' END AS ENDPNT_SE,
			'' AS URL
		FROM
			RUTE_INFO R,
			DATABASE_COMPN_INFO T,
			DATABASE_COMPN_TBL_INFO DT
		WHERE
			R.RUTE_SEQ = T.RUTE_SEQ
			AND T.COMPN_SEQ = DT.COMPN_SEQ
		UNION ALL
		SELECT
			R.INTRFC_ID,
			'' AS INQIRE_SQL,
			'' AS LDADNG_TABLE_NM,
			T.ROOT_DRCTRY,
			T.FILE_INCLS_PTTRN,
			T.RECPTN_FILE_NM,
			T.ENDPNT_SE,
			'' AS URL
		FROM
			RUTE_INFO R,
			FILE_COMPN_INFO T
		WHERE
			R.RUTE_SEQ = T.RUTE_SEQ
		UNION ALL
		SELECT
			R.INTRFC_ID,
			'' AS INQIRE_SQL,
			'' AS LDADNG_TABLE_NM,
			'' AS ROOT_DRCTRY,
			'' AS FILE_INCLS_PTTRN,
			'' AS RECPTN_FILE_NM,
			'' AS ENDPNT_SE,
			T.URL
		FROM
			RUTE_INFO R,
			HTTP_COMPN_INFO T
		WHERE
			R.RUTE_SEQ = T.RUTE_SEQ
		UNION ALL
		SELECT
			R.INTRFC_ID,
			'' AS INQIRE_SQL,
			'' AS LDADNG_TABLE_NM,
			T.ROOT_DRCTRY,
			T.FILE_INCLS_PTTRN,
			T.RECPTN_FILE_NM,
			T.ENDPNT_SE,
			'' AS URL
		FROM
			RUTE_INFO R,
			FTP_COMPN_INFO T
		WHERE
			R.RUTE_SEQ = T.RUTE_SEQ
	</select>
	<select id="SELECT_RUTE_INFO_LIST" resultType="com.b2en.integration.aster.model.route.RouteConfig">
		/* [RouteConfigMapper.SELECT_RUTE_INFO_LIST]  라우트 정보 목록 조회 */
		SELECT
			RUTE_SEQ
			,R.INTRFC_ID
			,RUTE_ORDER
			,AGENT_ID
			,R.REGIST_DT
			,R.REGIST_ID
			,R.REGIST_IP
			,R.UPDT_DT
			,R.UPDT_ID
			,R.UPDT_IP
		FROM RUTE_INFO${tablePostFix} R, INTRFC_INFO I
		WHERE 1=1
		AND R.INTRFC_ID = I.INTRFC_ID
		<if test="agentId != null">
			AND R.AGENT_ID = #{agentId}
		</if>
		<if test="intrfcId != null">
			AND R.INTRFC_ID = #{intrfcId}
		</if>
		<if test="ruteSeqList != null">
			AND R.RUTE_SEQ IN
			<foreach collection="ruteSeqList" item="inValue" open="(" close=")" separator=",">
      			${inValue}
 			</foreach>
		</if>
		ORDER BY RUTE_ORDER ASC, RUTE_SEQ
	</select>
	<select id="SELECT_RUTE_INFO" resultType="com.b2en.integration.aster.model.route.RouteConfig">
		/* [RouteConfigMapper.SELECT_RUTE_INFO]  라우트 정보 조회 */
		SELECT
			RUTE_SEQ
			,INTRFC_ID
			,RUTE_ORDER
			,AGENT_ID
			,REGIST_DT
			,REGIST_ID
			,REGIST_IP
			,UPDT_DT
			,UPDT_ID
			,UPDT_IP
		FROM RUTE_INFO_WORK
		<if test="intrfcId == null">
		WHERE RUTE_SEQ = #{ruteSeq}
			AND AGENT_ID = #{agentId}
		</if>
		<if test="intrfcId != null">
		<!-- 인터페이스 목록에서  인터페이스 시작/중지 대상 조회시 사용하는 조건절이므로 RUTE_ORDER =1 로 고정한다.  -->
		WHERE INTRFC_ID = #{intrfcId}
		AND RUTE_ORDER = 1
		</if>
	</select>
	<select id="SELECT_INTRFC_INFO_COUNT" resultType="int">
		/* [RouteConfigMapper.SELECT_INTRFC_INFO_COUNT]  인터페이스 정보 수 조회  */
		SELECT
			COUNT(1) CNT
		FROM INTRFC_INFO
		WHERE INTRFC_ID  = #{intrfcId}
	</select>
	<insert id="INSERT_INTRFC_INFO" parameterType="com.b2en.integration.aster.model.system.interfaces.InterfaceConfig">
		/* [RouteConfigMapper.INSERT_INTRFC_INFO]  인터페이스 정보 등록 */
		INSERT INTO INTRFC_INFO
		(
			INTRFC_SEQ,
			INTRFC_ID,
			INTRFC_NM,
			INTRFC_TY,
			SYNC_YN,
			ACTVTY_YN,
			TRNSC_LOG_YN,
			MSSAGE_LOG_YN,
			LAST_DSTB_VER,
			REGIST_DT,
			REGIST_ID,
			REGIST_IP,
			UPDT_DT,
			UPDT_ID,
			UPDT_IP,
			SYNC_YN_WORK,
			ACTVTY_YN_WORK,
			TRNSC_LOG_YN_WORK,
			MSSAGE_LOG_YN_WORK
		)VALUES(
			#{intrfcSeq},
			#{intrfcId},
			#{intrfcNm},
			#{intrfcTy},
			#{syncYn},
			#{actvtyYn},
			#{trnscLogYn},
			#{mssageLogYn},
			#{lastDstbVer},
			#{registDt},
			#{registId},
			#{registIp},
			#{updtDt},
			#{updtId},
			#{updtIp},
			#{syncYnWork},
			#{actvtyYnWork},
			#{trnscLogYnWork},
			#{mssageLogYnWork}
		)
	</insert>

	<update id="UPDATE_INTRFC_INFO" parameterType="com.b2en.integration.aster.model.system.interfaces.InterfaceConfig">
		/* [RouteConfigMapper.UPDATE_INTRFC_INFO]  인터페이스 정보 수정*/
		UPDATE INTRFC_INFO SET
			INTRFC_NM = #{intrfcNm},
			INTRFC_TY = #{intrfcTy},
			LAST_DSTB_VER = LAST_DSTB_VER+1,
			UPDT_DT = #{updtDt},
			UPDT_ID = #{updtId},
			UPDT_IP = #{updtIp},
			SYNC_YN_WORK = #{syncYnWork},
			ACTVTY_YN_WORK = #{actvtyYnWork},
			TRNSC_LOG_YN_WORK = #{trnscLogYnWork},
			MSSAGE_LOG_YN_WORK = #{mssageLogYnWork}
		WHERE INTRFC_ID = #{intrfcId}
	</update>
	<update id="UPDATE_INTRFC_INFO_ACTVTY_YN" parameterType="com.b2en.integration.aster.model.system.interfaces.InterfaceConfig">
		/* [RouteConfigMapper.UPDATE_INTRFC_INFO_ACTVTY_YN]  인터페이스 정보 수정(활성화상태) */
		UPDATE INTRFC_INFO
		SET
			ACTVTY_YN = #{actvtyYn} ,
			UPDT_DT = #{updtDt},
			UPDT_ID = #{updtId},
			UPDT_IP = #{updtIp}
		WHERE INTRFC_ID = #{intrfcId}
	</update>
	<insert id="INSERT_RUTE_INFO" parameterType="com.b2en.integration.aster.model.system.datasource.RdbmsConfig">
		/* [RouteConfigMapper.INSERT_RUTE_INFO]  라우트 정보 등록*/
		INSERT INTO RUTE_INFO_WORK (
			RUTE_SEQ
			,INTRFC_ID
			,RUTE_ORDER
			,AGENT_ID
			,REGIST_DT
			,REGIST_ID
			,REGIST_IP
			,UPDT_DT
			,UPDT_ID
			,UPDT_IP
		)VALUES(
			#{ruteSeq}
			,#{intrfcId}
			,#{ruteOrder}
			,#{agentId}
			,#{registDt}
			,#{registId}
			,#{registIp}
			,#{updtDt}
			,#{updtId}
			,#{updtIp}
		)
	</insert>
	<update id="UPDATE_RUTE_INFO" parameterType="com.b2en.integration.aster.model.system.datasource.RdbmsConfig">
		/* [RouteConfigMapper.UPDATE_RUTE_INFO]  라우트 정보 수정*/
		UPDATE RUTE_INFO_WORK SET
			RUTE_ORDER = #{ruteOrder}
			,AGENT_ID = #{agentId}
			,UPDT_DT = #{updtDt}
			,UPDT_ID = #{updtId}
			,UPDT_IP = #{updtIp}
		WHERE RUTE_SEQ = #{ruteSeq}
			AND INTRFC_ID = #{intrfcId}
	</update>
	<insert id="INSERT_FILE_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.FileComponentConfig">
		/* [RouteConfigMapper.INSERT_FILE_COMPN_INFO]  파일 컴포넌트 정보 등록 */
		INSERT INTO FILE_COMPN_INFO_WORK(
			COMPN_SEQ,
			NEXT_COMPN_SEQ,
			RUTE_SEQ,
			ENDPNT_SE,
			REFER_MAP_KEY,
			ROOT_DRCTRY,
			SUB_DRCTRY_SEND_YN,
			SUB_DRCTRY_MNMM_DP,
			SUB_DRCTRY_MXMM_DP,
			SUB_DRCTRY_PTTRN,
			SORT_SE,
			READ_LOK_INTRVL,
			COMPT_FILE_NM,
			ETY_FILE_SEND_YN,
    		EQLTY_DATA_DETECT_YN,
    		EQLTY_DATA_DETECT_PTTRN,
			FILE_READ_TY,
			PARTITN_SIZE,
			LINE_SPRTR,
			COLUMN_SPRTR,
			CHARCR_SET,
			PARLEL_PROCESS_CO,
			CMPRS_YN,
			FILE_INCLS_PTTRN,
			FILE_EXCL_PTTRN,
			SUCCES_PROCESS_TY,
			SUCCES_FILE_PTH,
			ERROR_PROCESS_TY,
			ERROR_FILE_PTH,
			DPLCT_PROCESS_TY,
			DPLCT_FILE_PTH,
			HDER_COLUMN,
			HDER_COLUMN_LT,
			HDER_SKIP_YN,
			BLANK_CHARCR,
			RECPTN_FILE_NM,
			COMPN_NM,
			COMPN_POSITION,
			REGIST_DT,
			REGIST_ID,
			REGIST_IP,
			UPDT_DT,
			UPDT_ID,
			UPDT_IP
		)VALUES(
			#{compnSeq},
			#{nextCompnSeq},
			#{ruteSeq},
			#{endpntSe},
			#{referMapKey, jdbcType=VARCHAR},
			#{rootDrctry},
			#{subDrctrySendYn},
			#{subDrctryMnmmDp, jdbcType=VARCHAR},
			#{subDrctryMxmmDp, jdbcType=VARCHAR},
			#{subDrctryPttrn, jdbcType=VARCHAR},
			#{sortSe},
			#{readLokIntrvl},
			#{comptFileNm, jdbcType=VARCHAR},
			#{etyFileSendYn},
    		#{eqltyDataDetectYn},
    		#{eqltyDataDetectPttrn, jdbcType=VARCHAR},
			#{fileReadTy.name},
			#{partitnSize, jdbcType=VARCHAR},
			#{lineSprtr.textValue, jdbcType=VARCHAR},
			#{columnSprtr.textValue, jdbcType=VARCHAR},
			#{charcrSet, jdbcType=VARCHAR},
			#{parlelProcessCo},
			#{cmprsYn},
			#{fileInclsPttrn},
			#{fileExclPttrn, jdbcType=VARCHAR},
			#{succesProcessTy.name},
			#{succesFilePth, jdbcType=VARCHAR},
			#{errorProcessTy.name},
			#{errorFilePth, jdbcType=VARCHAR},
			#{dplctProcessTy.name, jdbcType=VARCHAR},
			#{dplctFilePth, jdbcType=VARCHAR},
			#{hderColumn, jdbcType=VARCHAR},
			#{hderColumnLt, jdbcType=VARCHAR},
			#{hderSkipYn, jdbcType=VARCHAR},
			#{blankCharcr.textValue, jdbcType=VARCHAR},
			#{recptnFileNm, jdbcType=VARCHAR},
			#{compnNm},
			#{compnPosition},
			#{registDt},
			#{registId},
			#{registIp},
			#{updtDt},
			#{updtId},
			#{updtIp}
		)

	</insert>
	<update id="UPDATE_FILE_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.FileComponentConfig">
		/* [RouteConfigMapper.UPDATE_FILE_COMPN_INFO]  파일 컴포넌트 정보 수정 */
		UPDATE FILE_COMPN_INFO_WORK SET
			REFER_MAP_KEY = #{referMapKey, jdbcType=VARCHAR},
			ROOT_DRCTRY = #{rootDrctry},
			SUB_DRCTRY_SEND_YN = #{subDrctrySendYn},
			SUB_DRCTRY_MNMM_DP = #{subDrctryMnmmDp, jdbcType=VARCHAR},
			SUB_DRCTRY_MXMM_DP = #{subDrctryMxmmDp, jdbcType=VARCHAR},
			SUB_DRCTRY_PTTRN = #{subDrctryPttrn, jdbcType=VARCHAR},
			SORT_SE = #{sortSe},
			READ_LOK_INTRVL = #{readLokIntrvl},
			COMPT_FILE_NM = #{comptFileNm, jdbcType=VARCHAR},
			ETY_FILE_SEND_YN = #{etyFileSendYn},
    		EQLTY_DATA_DETECT_YN = #{eqltyDataDetectYn},
    		EQLTY_DATA_DETECT_PTTRN = #{eqltyDataDetectPttrn, jdbcType=VARCHAR},
			FILE_READ_TY = #{fileReadTy},
			PARTITN_SIZE = #{partitnSize, jdbcType=VARCHAR},
			LINE_SPRTR = #{lineSprtr.textValue, jdbcType=VARCHAR},
			COLUMN_SPRTR = #{columnSprtr.textValue, jdbcType=VARCHAR},
			CHARCR_SET = #{charcrSet, jdbcType=VARCHAR},
			PARLEL_PROCESS_CO = #{parlelProcessCo},
			CMPRS_YN = #{cmprsYn},
			FILE_INCLS_PTTRN = #{fileInclsPttrn},
			FILE_EXCL_PTTRN = #{fileExclPttrn, jdbcType=VARCHAR},
			SUCCES_PROCESS_TY = #{succesProcessTy},
			SUCCES_FILE_PTH = #{succesFilePth, jdbcType=VARCHAR},
			ERROR_PROCESS_TY = #{errorProcessTy},
			ERROR_FILE_PTH = #{errorFilePth, jdbcType=VARCHAR},
			DPLCT_PROCESS_TY = #{dplctProcessTy, jdbcType=VARCHAR},
			DPLCT_FILE_PTH = #{dplctFilePth, jdbcType=VARCHAR},
			HDER_COLUMN = #{hderColumn, jdbcType=VARCHAR},
			HDER_COLUMN_LT = #{hderColumnLt, jdbcType=VARCHAR},
			HDER_SKIP_YN = #{hderSkipYn, jdbcType=VARCHAR},
			BLANK_CHARCR = #{blankCharcr.textValue, jdbcType=VARCHAR},
			RECPTN_FILE_NM = #{recptnFileNm, jdbcType=VARCHAR},
			ENDPNT_SE = #{endpntSe},
			NEXT_COMPN_SEQ = #{nextCompnSeq},
			COMPN_NM = #{compnNm},
			COMPN_POSITION = #{compnPosition},
			UPDT_DT = #{updtDt},
			UPDT_ID = #{updtId},
			UPDT_IP = #{updtIp}
		WHERE
			COMPN_SEQ = #{compnSeq}
			AND RUTE_SEQ = #{ruteSeq}
	</update>
	<insert id="INSERT_AGENT_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.AgentComponentConfig">
		/* [RouteConfigMapper.INSERT_AGENT_COMPN_INFO] 에이전트 컴포넌트 정보 등록 */
		INSERT INTO AGENT_COMPN_INFO_WORK (
			COMPN_SEQ,
			NEXT_COMPN_SEQ,
			RUTE_SEQ,
			ENDPNT_SE,
			REFER_AGENT_ID,
			ENCPT_TY,
			CMPRS_YN,
			COMPN_NM,
			COMPN_POSITION,
			REGIST_DT,
			REGIST_ID,
			REGIST_IP,
			UPDT_DT,
			UPDT_ID,
			UPDT_IP
		) VALUES (
			#{compnSeq},
			#{nextCompnSeq},
			#{ruteSeq},
			#{endpntSe},
			#{referAgentId, jdbcType=VARCHAR},
			#{encptTy},
			#{cmprsYn},
			#{compnNm},
			#{compnPosition},
			#{registDt},
			#{registId},
			#{registIp},
			#{updtDt},
			#{updtId},
			#{updtIp}
		)
	</insert>
	<insert id="UPDATE_AGENT_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.AgentComponentConfig">
		/* [RouteConfigMapper.UPDATE_AGENT_COMPN_INFO] 에이전트 컴포넌트 정보 수정 */
		UPDATE AGENT_COMPN_INFO_WORK SET
			REFER_AGENT_ID = #{referAgentId, jdbcType=VARCHAR},
			ENCPT_TY = #{encptTy},
			CMPRS_YN = #{cmprsYn},
			ENDPNT_SE = #{endpntSe},
			NEXT_COMPN_SEQ = #{nextCompnSeq},
			COMPN_NM = #{compnNm},
			COMPN_POSITION = #{compnPosition},
			UPDT_DT = #{updtDt},
			UPDT_ID = #{updtId},
			UPDT_IP = #{updtIp}
		WHERE
			COMPN_SEQ = #{compnSeq}
			AND RUTE_SEQ = #{ruteSeq}
	</insert>

	<delete id="DELETE_INTRFC_INFO" parameterType="com.b2en.integration.aster.model.system.interfaces.InterfaceConfig">
		/* [RouteConfigMapper.DELETE_INTRFC_INFO] 인터페이스 정보 삭제 */
		DELETE FROM INTRFC_INFO
		WHERE INTRFC_ID = #{intrfcId}
	</delete>

	<delete id="DELETE_RUTE_INFO" parameterType="com.b2en.integration.aster.model.route.RouteConfig">
		/* [RouteConfigMapper.DELETE_RUTE_INFO] 라우트 정보 삭제 */
		DELETE FROM RUTE_INFO${tablePostFix}
		WHERE INTRFC_ID = #{intrfcId}
			AND RUTE_SEQ = #{ruteSeq}
	</delete>
	<delete id="DELETE_SCHDUL_INFO" parameterType="com.b2en.integration.aster.model.system.schedule.ScheduleConfig">
		/* [RouteConfigMapper.DELETE_SCHDUL_INFO] 스케줄 정보 삭제 */
		DELETE FROM SCHDUL_INFO${tablePostFix}
		WHERE EXECUT_TRGET_NM = #{executTrgetNm}
		AND EXECUT_TRGET_SE = #{executTrgetSe}
	</delete>

	<delete id="DELETE_FILE_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.FileComponentConfig">
		/* [RouteConfigMapper.DELETE_FILE_COMPN_INFO] 파일 컴포넌트 정보 삭제 */
		DELETE FROM FILE_COMPN_INFO${tablePostFix}
		WHERE 1=1
			<if test="compnSeq > 0">
			AND COMPN_SEQ = #{compnSeq}
			</if>
			<if test="ruteSeq > 0">
			AND RUTE_SEQ = #{ruteSeq}
			</if>
	</delete>

	<delete id="DELETE_AGENT_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.AgentComponentConfig">
		/* [RouteConfigMapper.DELETE_AGENT_COMPN_INFO] 에이전트 컴포넌트 정보 삭제 */
		DELETE FROM AGENT_COMPN_INFO${tablePostFix}
		WHERE 1=1
			<if test="compnSeq > 0">
			AND COMPN_SEQ = #{compnSeq}
			</if>
			<if test="ruteSeq > 0">
			AND RUTE_SEQ = #{ruteSeq}
			</if>
	</delete>

	<insert id="INSERT_SCHDUL_INFO" parameterType="com.b2en.integration.aster.model.system.schedule.ScheduleConfig">
		/* [RouteConfigMapper.INSERT_SCHDUL_INFO] 스케줄 정보 등록  */
		INSERT INTO SCHDUL_INFO_WORK (
			AGENT_ID
			,SCHDUL_ID
			,SCHDUL_NM
			,EXECUT_TRGET_SE
			,EXECUT_TRGET_NM
			,SCHDUL_EXECUT_SE
			,SECND
			,MIN
			,HOUR
			,DE
			,MT
			,DAY
			,YY
			,ACTVTY_YN
			,REGIST_DT
			,REGIST_ID
			,REGIST_IP
			,UPDT_DT
			,UPDT_ID
			,UPDT_IP
		)VALUES(
			#{agentId}
			,#{schdulId}
			,#{schdulNm}
			,#{executTrgetSe}
			,#{executTrgetNm}
			,#{schdulExecutSe}
			,#{secnd}
			,#{min, jdbcType=VARCHAR}
			,#{hour, jdbcType=VARCHAR}
			,#{de, jdbcType=VARCHAR}
			,#{mt, jdbcType=VARCHAR}
			,#{day, jdbcType=VARCHAR}
			,#{yy, jdbcType=VARCHAR}
			,#{actvtyYn}
			,#{registDt}
			,#{registId}
			,#{registIp}
			,#{updtDt}
			,#{updtId}
			,#{updtIp}
		)
	</insert>

	<update id="UPDATE_SCHDUL_INFO" parameterType="com.b2en.integration.aster.model.system.schedule.ScheduleConfig">
		/* [RouteConfigMapper.UPDATE_SCHDUL_INFO] 스케줄 정보 수정  */
		UPDATE SCHDUL_INFO_WORK  SET
			SCHDUL_ID = #{schdulId}
			,SCHDUL_NM = #{schdulNm}
			,SCHDUL_EXECUT_SE = #{schdulExecutSe}
			,SECND = #{secnd}
			,MIN = #{min, jdbcType=VARCHAR}
			,HOUR = #{hour, jdbcType=VARCHAR}
			,DE = #{de, jdbcType=VARCHAR}
			,MT = #{mt, jdbcType=VARCHAR}
			,DAY = #{day, jdbcType=VARCHAR}
			,YY = #{yy, jdbcType=VARCHAR}
			,ACTVTY_YN = #{actvtyYn}
			,UPDT_DT = #{updtDt}
			,UPDT_ID = #{updtId}
			,UPDT_IP = #{updtIp}
		WHERE AGENT_ID = #{agentId}
			AND EXECUT_TRGET_SE = #{executTrgetSe} /* 스케줄 실행 대상 - INTERFACE/CLASS */
			AND EXECUT_TRGET_NM = #{executTrgetNm} /* 스케줄 실행 대상 - INTERFACE ID  */

	</update>

	<insert id="INSERT_DATABASE_COMPN_INFO"  parameterType="com.b2en.integration.aster.model.route.DatabaseComponentConfig">
		/* [RouteConfigMapper.INSERT_DATABASE_COMPN_INFO] 데이터베이스 컴포넌트 정보 등록*/
		INSERT INTO DATABASE_COMPN_INFO_WORK (
			COMPN_SEQ
			,NEXT_COMPN_SEQ
			,RUTE_SEQ
			,ENDPNT_SE
			,DTASRC_ID
			,PARAMTR_INPUT_SE
			,SQL_PARAMTR
			,ATMC_REHNDL_SE
			,COMPN_NM
			,COMPN_POSITION
			,REGIST_DT
			,REGIST_ID
			,REGIST_IP
			,UPDT_DT
			,UPDT_ID
			,UPDT_IP
		)VALUES(
			#{compnSeq}
			,#{nextCompnSeq}
			,#{ruteSeq}
			,#{endpntSe}
			,#{dtasrcId}
			,#{paramtrInputSe}
			,#{sqlParamtr, jdbcType=VARCHAR}
			,#{atmcRehndlSe}
			,#{compnNm}
			,#{compnPosition}
			,#{registDt}
			,#{registId}
			,#{registIp}
			,#{updtDt}
			,#{updtId}
			,#{updtIp}
		)
	</insert>

	<update id="UPDATE_DATABASE_COMPN_INFO"  parameterType="com.b2en.integration.aster.model.route.DatabaseComponentConfig">
		/* [RouteConfigMapper.UPDATE_DATABASE_COMPN_INFO] 데이터베이스 컴포넌트 정보 수정 */
		UPDATE DATABASE_COMPN_INFO_WORK SET
			DTASRC_ID = #{dtasrcId}
			,PARAMTR_INPUT_SE = #{paramtrInputSe}
			,SQL_PARAMTR = #{sqlParamtr, jdbcType=VARCHAR}
			,ATMC_REHNDL_SE = #{atmcRehndlSe}
			,ENDPNT_SE = #{endpntSe}
			,NEXT_COMPN_SEQ = #{nextCompnSeq}
			,COMPN_NM = #{compnNm}
			,COMPN_POSITION = #{compnPosition}
			,UPDT_DT = #{updtDt}
			,UPDT_ID = #{updtId}
			,UPDT_IP = #{updtIp}
		WHERE
			COMPN_SEQ = #{compnSeq}
			AND RUTE_SEQ = #{ruteSeq}
	</update>

	<delete id="DELETE_DATABASE_COMPN_INFO"  parameterType="com.b2en.integration.aster.model.route.DatabaseComponentConfig">
		/* [RouteConfigMapper.DELETE_DATABASE_COMPN_INFO] 데이터베이스 컴포넌트 정보 삭제 */
		DELETE FROM DATABASE_COMPN_INFO${tablePostFix}
		WHERE 1=1
			<if test="compnSeq > 0">
			AND COMPN_SEQ = #{compnSeq}
			</if>
			<if test="ruteSeq > 0">
			AND RUTE_SEQ = #{ruteSeq}
			</if>
	</delete>

	<insert id="INSERT_DATABASE_COMPN_TBL_INFO" parameterType="com.b2en.integration.aster.model.route.DatabaseComponentTableConfig">
		/* [RouteConfigMapper.INSERT_DATABASE_COMPN_TBL_INFO] 데이터베이스 컴포넌트 테이블 정보 등록  */
		INSERT INTO DATABASE_COMPN_TBL_INFO_WORK (
			TBL_SEQ
			,COMPN_SEQ
			,TABLE_ORDER
			,REFRN_KEY_NM
			,INQIRE_SQL
    		,SUCCES_PROCESS_SQL
    		,FAILR_PROCESS_SQL
			,LDADNG_TY
			,LDADNG_TABLE_NM
			,LDADNG_COLUMN
			,LDADNG_KEY_COLUMN
			,REGIST_DT
			,REGIST_ID
			,REGIST_IP
			,UPDT_DT
			,UPDT_ID
			,UPDT_IP
		)VALUES(
			#{tblSeq}
			,#{compnSeq}
			,#{tableOrder}
			,#{refrnKeyNm}
			,#{inqireSql, jdbcType=CLOB}
    		,#{succesProcessSql, jdbcType=CLOB}
    		,#{failrProcessSql, jdbcType=CLOB}
			,#{ldadngTy, jdbcType=CHAR}
			,#{ldadngTableNm, jdbcType=VARCHAR}
			,#{ldadngColumn, jdbcType=CLOB}
			,#{ldadngKeyColumn, jdbcType=VARCHAR}
			,#{registDt}
			,#{registId}
			,#{registIp}
			,#{updtDt}
			,#{updtId}
			,#{updtIp}
		)
	</insert>

	<update id="UPDATE_DATABASE_COMPN_TBL_INFO" parameterType="com.b2en.integration.aster.model.route.DatabaseComponentTableConfig">
		/* [RouteConfigMapper.UPDATE_DATABASE_COMPN_TBL_INFO] 데이터베이스 컴포넌트 테이블 정보 수정 */
		UPDATE DATABASE_COMPN_TBL_INFO_WORK SET
			TABLE_ORDER = #{tableOrder}
			,REFRN_KEY_NM = #{refrnKeyNm}
			,INQIRE_SQL = #{inqireSql, jdbcType=CLOB}
    		,SUCCES_PROCESS_SQL = #{succesProcessSql, jdbcType=CLOB}
    		,FAILR_PROCESS_SQL =#{failrProcessSql, jdbcType=CLOB}
			,LDADNG_TY = #{ldadngTy, jdbcType=CHAR}
			,LDADNG_TABLE_NM  = #{ldadngTableNm, jdbcType=VARCHAR}
			,LDADNG_COLUMN = #{ldadngColumn, jdbcType=CLOB}
			,LDADNG_KEY_COLUMN = #{ldadngKeyColumn, jdbcType=VARCHAR}
			,UPDT_DT = #{updtDt}
			,UPDT_ID = #{updtId}
			,UPDT_IP = #{updtIp}
		WHERE TBL_SEQ = #{tblSeq}
			AND COMPN_SEQ = #{compnSeq}
	</update>

	<delete id="DELETE_DATABASE_COMPN_TBL_INFO" parameterType="com.b2en.integration.aster.model.route.DatabaseComponentTableConfig">
		/* [RouteConfigMapper.DELETE_DATABASE_COMPN_TBL_INFO] 데이터베이스 컴포넌트 테이블 정보 삭제  */
		DELETE FROM DATABASE_COMPN_TBL_INFO${tablePostFix} T
		WHERE T.COMPN_SEQ IN (
			SELECT COMPN_SEQ FROM DATABASE_COMPN_INFO${tablePostFix} X
			WHERE  1=1
			<if test="compnSeq > 0">
			AND X.COMPN_SEQ = #{compnSeq}
			</if>
			<if test="ruteSeq > 0">
			AND X.RUTE_SEQ = #{ruteSeq}
			</if>
		)
		<if test="tblSeq > 0">
		AND T.TBL_SEQ = #{tblSeq}
		</if>
	</delete>
	<select id="SELECT_DELETE_DSTB_TRGT_MANAGE_INFO" parameterType="com.b2en.integration.aster.model.route.RouteConfig" resultType="com.b2en.integration.aster.model.route.RouteConfig">
		/* [RouteConfigMapper.SELECT_DELETE_DSTB_TRGT_MANAGE_INFO] 삭제 배포 대상 관리 테이블 조회 */
		SELECT TRGT_SEQ, AGENT_ID, INTRFC_ID, RUTE_SEQ, STTS
		FROM DELETE_DSTB_TRGT_MANAGE
		WHERE INTRFC_ID = #{intrfcId}
		AND STTS = 'P'
	</select>
	<delete id="DELETE_DELETE_DSTB_TRGT_MANAGE" parameterType="com.b2en.integration.aster.model.route.RouteConfig">
		/* [RouteConfigMapper.DELETE_DELETE_DSTB_TRGT_MANAGE] 삭제 배포 대상 관리 테이블 삭제 */
		DELETE FROM DELETE_DSTB_TRGT_MANAGE
		WHERE INTRFC_ID = #{intrfcId}
	</delete>
	<insert id="INSERT_DELETE_DSTB_TRGT_MANAGE" parameterType="com.b2en.integration.aster.model.route.RouteConfig">
		/* [RouteConfigMapper.INSERT_DELETE_DSTB_TRGT_MANAGE] 삭제 배포 대상 관리 테이블 등록 */
		INSERT INTO DELETE_DSTB_TRGT_MANAGE (TRGT_SEQ, AGENT_ID, INTRFC_ID, RUTE_SEQ, STTS)
		VALUES(#{trgtSeq}, #{agentId}, #{intrfcId}, #{ruteSeq}, #{stts})
	</insert>

	<insert id="INSERT_HBASE_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.HbaseComponentConfig">
		/* [RouteConfigMapper.DELETE_HBASE_COMPN_INFO] HBASE 컴포넌트 정보 등록 */
		INSERT INTO HBASE_COMPN_INFO_WORK (
			COMPN_SEQ
			, NEXT_COMPN_SEQ
			, RUTE_SEQ
			, ENDPNT_SE
			, DTASRC_ID
			, REFRN_KEY_NM
			, LDADNG_TABLE_NM
			, ROW_KEY
			, LDADNG_COLUMN
			, COMPN_NM
			, COMPN_POSITION
			, REGIST_DT
			, REGIST_ID
			, REGIST_IP
			, UPDT_DT
			, UPDT_ID
			, UPDT_IP
		)VALUES(
			#{compnSeq}
			, #{nextCompnSeq}
			, #{ruteSeq}
			, #{endpntSe}
			, #{dtasrcId}
			, #{refrnKeyNm}
			, #{ldadngTableNm}
			, #{rowKey}
			, #{ldadngColumn}
			, #{compnNm}
			, #{compnPosition}
			, #{registDt}
			, #{registId}
			, #{registIp}
			, #{updtDt}
			, #{updtId}
			, #{updtIp}
		)
	</insert>
	<update id="UPDATE_HBASE_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.HbaseComponentConfig">
		/* [RouteConfigMapper.DELETE_HBASE_COMPN_INFO] HBASE 컴포넌트 정보 수정 */
		UPDATE HBASE_COMPN_INFO_WORK
		SET
			DTASRC_ID= #{dtasrcId}
			, REFRN_KEY_NM=#{refrnKeyNm}
			, LDADNG_TABLE_NM=#{ldadngTableNm}
			, ROW_KEY=#{rowKey}
			, LDADNG_COLUMN=#{ldadngColumn}
			, ENDPNT_SE= #{endpntSe}
			, NEXT_COMPN_SEQ = #{nextCompnSeq}
			, COMPN_NM  = #{compnNm}
			, COMPN_POSITION = #{compnPosition}
			, UPDT_DT = #{updtDt}
			, UPDT_ID=#{updtId}
			, UPDT_IP=#{updtIp}
		WHERE
			COMPN_SEQ = #{compnSeq}
			AND RUTE_SEQ = #{ruteSeq}
	</update>
	<delete id="DELETE_HBASE_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.HbaseComponentConfig">
		/* [RouteConfigMapper.DELETE_HBASE_COMPN_INFO] HBASE 컴포넌트 정보 삭제 */
		DELETE FROM HBASE_COMPN_INFO${tablePostFix}
		WHERE
			RUTE_SEQ = #{ruteSeq}
			AND COMPN_SEQ = #{compnSeq}
	</delete>
	<insert id="INSERT_HTTP_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.HttpComponentConfig">
	/* [RouteConfigMapper.INSERT_HTTP_COMPN_INFO] HTTP 컴포넌트 정보 등록 */
	INSERT INTO HTTP_COMPN_INFO_WORK
	(
		COMPN_SEQ
		, NEXT_COMPN_SEQ
		, RUTE_SEQ
		, ENDPNT_SE
		, DTASRC_ID
		, URL
		, METHOD
		, HEADER
		, QUERY_PARAMTR
		, BODY_TMPLAT
		, AGGREGATION_TY
		, AGGREGATION_EPRSS
		, COMPN_NM
		, COMPN_POSITION
		, REGIST_DT
		, REGIST_ID
		, REGIST_IP
		, UPDT_DT
		, UPDT_ID
		, UPDT_IP
	) VALUES (
		#{compnSeq}
		, #{nextCompnSeq}
		, #{ruteSeq}
		, #{endpntSe}
		, #{dtasrcId}
		, #{url}
		, #{method}
		, #{header}
		, #{queryParamtr}
		, #{bodyTmplat}
		, #{aggregationTy}
		, #{aggregationEprss}
		, #{compnNm}
		, #{compnPosition}
		, #{registDt}
		, #{registId}
		, #{registIp}
		, #{updtDt}
		, #{updtId}
		, #{updtIp}
	)

	</insert>
	<update id="UPDATE_HTTP_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.HttpComponentConfig">
		/* [RouteConfigMapper.UPDATE_HTTP_COMPN_INFO] HTTP 컴포넌트 정보 수정 */
		UPDATE HTTP_COMPN_INFO_WORK SET
			NEXT_COMPN_SEQ = #{nextCompnSeq}
			, ENDPNT_SE = #{endpntSe}
			, DTASRC_ID = #{dtasrcId}
			, URL = #{url}
			, METHOD = #{method}
			, HEADER = #{header}
			, QUERY_PARAMTR = #{queryParamtr}
			, BODY_TMPLAT = #{bodyTmplat}
			, AGGREGATION_TY = #{aggregationTy}
			, AGGREGATION_EPRSS = #{aggregationEprss}
			, COMPN_NM = #{compnNm}
			, COMPN_POSITION = #{compnPosition}
			, UPDT_DT = #{updtDt}
			, UPDT_ID=#{updtId}
			, UPDT_IP=#{updtIp}
		WHERE
			COMPN_SEQ = #{compnSeq}
			AND RUTE_SEQ = #{ruteSeq}
	</update>
	<delete id="DELETE_HTTP_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.HttpComponentConfig">
		/* [RouteConfigMapper.DELETE_HTTP_COMPN_INFO] HTTP 컴포넌트 정보 삭제 */
		DELETE FROM HTTP_COMPN_INFO${tablePostFix}
		WHERE
			RUTE_SEQ = #{ruteSeq}
			AND COMPN_SEQ = #{compnSeq}
	</delete>


	<insert id="INSERT_FTP_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.FtpComponentConfig">
		/* [RouteConfigMapper.INSERT_FTP_COMPN_INFO]  FTP 컴포넌트 정보 등록 */
		INSERT INTO FTP_COMPN_INFO_WORK(
			COMPN_SEQ,
			NEXT_COMPN_SEQ,
			RUTE_SEQ,
			ENDPNT_SE,
			DTASRC_ID,
			TRANSFER_SE,
			REFER_MAP_KEY,
			ROOT_DRCTRY,
			SUB_DRCTRY_SEND_YN,
			SUB_DRCTRY_MNMM_DP,
			SUB_DRCTRY_MXMM_DP,
			SUB_DRCTRY_PTTRN,
			SORT_SE,
			READ_LOK_INTRVL,
			COMPT_FILE_NM,
			ETY_FILE_SEND_YN,
    		EQLTY_DATA_DETECT_YN,
    		EQLTY_DATA_DETECT_PTTRN,
			FILE_READ_TY,
			PARTITN_SIZE,
			LINE_SPRTR,
			COLUMN_SPRTR,
			CHARCR_SET,
			PARLEL_PROCESS_CO,
			CMPRS_YN,
			FILE_INCLS_PTTRN,
			FILE_EXCL_PTTRN,
			SUCCES_PROCESS_TY,
			SUCCES_FILE_PTH,
			ERROR_PROCESS_TY,
			ERROR_FILE_PTH,
			DPLCT_PROCESS_TY,
			DPLCT_FILE_PTH,
			HDER_COLUMN,
			HDER_COLUMN_LT,
			HDER_SKIP_YN,
			BLANK_CHARCR,
			RECPTN_FILE_NM,
			COMPN_NM,
			COMPN_POSITION,
			REGIST_DT,
			REGIST_ID,
			REGIST_IP,
			UPDT_DT,
			UPDT_ID,
			UPDT_IP
		)VALUES(
			#{compnSeq},
			#{nextCompnSeq},
			#{ruteSeq},
			#{endpntSe},
			#{dtasrcId},
			#{transferSe},
			#{referMapKey, jdbcType=VARCHAR},
			#{rootDrctry},
			#{subDrctrySendYn},
			#{subDrctryMnmmDp, jdbcType=VARCHAR},
			#{subDrctryMxmmDp, jdbcType=VARCHAR},
			#{subDrctryPttrn, jdbcType=VARCHAR},
			#{sortSe},
			#{readLokIntrvl},
			#{comptFileNm, jdbcType=VARCHAR},
			#{etyFileSendYn},
    		#{eqltyDataDetectYn},
    		#{eqltyDataDetectPttrn, jdbcType=VARCHAR},
			#{fileReadTy.name},
			#{partitnSize, jdbcType=VARCHAR},
			#{lineSprtr.textValue, jdbcType=VARCHAR},
			#{columnSprtr.textValue, jdbcType=VARCHAR},
			#{charcrSet, jdbcType=VARCHAR},
			#{parlelProcessCo},
			#{cmprsYn},
			#{fileInclsPttrn},
			#{fileExclPttrn, jdbcType=VARCHAR},
			#{succesProcessTy.name},
			#{succesFilePth, jdbcType=VARCHAR},
			#{errorProcessTy.name},
			#{errorFilePth, jdbcType=VARCHAR},
			#{dplctProcessTy.name, jdbcType=VARCHAR},
			#{dplctFilePth, jdbcType=VARCHAR},
			#{hderColumn, jdbcType=VARCHAR},
			#{hderColumnLt, jdbcType=VARCHAR},
			#{hderSkipYn, jdbcType=VARCHAR},
			#{blankCharcr.textValue, jdbcType=VARCHAR},
			#{recptnFileNm, jdbcType=VARCHAR},
			#{compnNm},
			#{compnPosition},
			#{registDt},
			#{registId},
			#{registIp},
			#{updtDt},
			#{updtId},
			#{updtIp}
		)

	</insert>
	<update id="UPDATE_FTP_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.FtpComponentConfig">
		/* [RouteConfigMapper.UPDATE_FTP_COMPN_INFO]  FTP 컴포넌트 정보 수정 */
		UPDATE FTP_COMPN_INFO_WORK SET
			NEXT_COMPN_SEQ = #{nextCompnSeq},
			ENDPNT_SE = #{endpntSe},
			DTASRC_ID = #{dtasrcId},
			TRANSFER_SE = #{transferSe},
			REFER_MAP_KEY = #{referMapKey, jdbcType=VARCHAR},
			ROOT_DRCTRY = #{rootDrctry},
			SUB_DRCTRY_SEND_YN = #{subDrctrySendYn},
			SUB_DRCTRY_MNMM_DP = #{subDrctryMnmmDp, jdbcType=VARCHAR},
			SUB_DRCTRY_MXMM_DP = #{subDrctryMxmmDp, jdbcType=VARCHAR},
			SUB_DRCTRY_PTTRN = #{subDrctryPttrn, jdbcType=VARCHAR},
			SORT_SE = #{sortSe},
			READ_LOK_INTRVL = #{readLokIntrvl},
			COMPT_FILE_NM = #{comptFileNm, jdbcType=VARCHAR},
			ETY_FILE_SEND_YN = #{etyFileSendYn},
    		EQLTY_DATA_DETECT_YN = #{eqltyDataDetectYn},
    		EQLTY_DATA_DETECT_PTTRN = #{eqltyDataDetectPttrn, jdbcType=VARCHAR},
			FILE_READ_TY = #{fileReadTy},
			PARTITN_SIZE = #{partitnSize, jdbcType=VARCHAR},
			LINE_SPRTR = #{lineSprtr.textValue, jdbcType=VARCHAR},
			COLUMN_SPRTR = #{columnSprtr.textValue, jdbcType=VARCHAR},
			CHARCR_SET = #{charcrSet, jdbcType=VARCHAR},
			PARLEL_PROCESS_CO = #{parlelProcessCo},
			CMPRS_YN = #{cmprsYn},
			FILE_INCLS_PTTRN = #{fileInclsPttrn},
			FILE_EXCL_PTTRN = #{fileExclPttrn, jdbcType=VARCHAR},
			SUCCES_PROCESS_TY = #{succesProcessTy},
			SUCCES_FILE_PTH = #{succesFilePth, jdbcType=VARCHAR},
			ERROR_PROCESS_TY = #{errorProcessTy},
			ERROR_FILE_PTH = #{errorFilePth, jdbcType=VARCHAR},
			DPLCT_PROCESS_TY = #{dplctProcessTy, jdbcType=VARCHAR},
			DPLCT_FILE_PTH = #{dplctFilePth, jdbcType=VARCHAR},
			HDER_COLUMN = #{hderColumn, jdbcType=VARCHAR},
			HDER_COLUMN_LT = #{hderColumnLt, jdbcType=VARCHAR},
			HDER_SKIP_YN = #{hderSkipYn, jdbcType=VARCHAR},
			BLANK_CHARCR = #{blankCharcr.textValue, jdbcType=VARCHAR},
			RECPTN_FILE_NM = #{recptnFileNm, jdbcType=VARCHAR},
			COMPN_NM = #{compnNm},
			COMPN_POSITION = #{compnPosition},
			UPDT_DT = #{updtDt},
			UPDT_ID = #{updtId},
			UPDT_IP = #{updtIp}
		WHERE
			COMPN_SEQ = #{compnSeq}
			AND RUTE_SEQ = #{ruteSeq}
	</update>
	<delete id="DELETE_FTP_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.FtpComponentConfig">
		/* [RouteConfigMapper.DELETE_FTP_COMPN_INFO] FTP 컴포넌트 정보 삭제 */
		DELETE FROM FTP_COMPN_INFO${tablePostFix}
		WHERE
			RUTE_SEQ = #{ruteSeq}
			AND COMPN_SEQ = #{compnSeq}
	</delete>
	<!-- WORK 테이블 => 배포 테이블로 데이터 이관 프로세스 관련 쿼리 -->
	<delete id="DELETE_AGENT_COMPN_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_AGENT_COMPN_INFO_DISTRIBUTE_TARGET] 배포대상 과거 데이터  삭제 (에이전트 컴포넌트 정보)*/
		DELETE FROM AGENT_COMPN_INFO
		WHERE RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</delete>

	<insert id="INSERT_AGENT_COMPN_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.INSERT_AGENT_COMPN_INFO_DISTRIBUTE_TARGET] WORK 테이블 => 배포 테이블 등록 (에이전트 컴포넌트 정보)*/
		INSERT INTO AGENT_COMPN_INFO(COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, REFER_AGENT_ID, ENCPT_TY, CMPRS_YN, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, REFER_AGENT_ID, ENCPT_TY, CMPRS_YN, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP
		FROM AGENT_COMPN_INFO_WORK
		WHERE RUTE_SEQ  IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</insert>
	<delete id="DELETE_DATABASE_COMPN_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_DATABASE_COMPN_INFO_DISTRIBUTE_TARGET] 배포대상 과거 데이터  삭제 (데이터베이스 컴포넌트 정보)*/
		DELETE FROM DATABASE_COMPN_INFO
		WHERE RUTE_SEQ  IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</delete>
	<insert id="INSERT_DATABASE_COMPN_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.INSERT_DATABASE_COMPN_INFO_DISTRIBUTE_TARGET] WORK 테이블 => 배포 테이블 등록 (데이터베이스 컴포넌트 정보)*/
		INSERT INTO DATABASE_COMPN_INFO(COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, DTASRC_ID, PARAMTR_INPUT_SE, SQL_PARAMTR, ATMC_REHNDL_SE, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, DTASRC_ID, PARAMTR_INPUT_SE, SQL_PARAMTR, ATMC_REHNDL_SE, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP
		FROM DATABASE_COMPN_INFO_WORK
		WHERE RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</insert>
	<delete id="DELETE_DATABASE_COMPN_TBL_INFO_DISTRIBUTE_TARGET">
	/* [RouteConfigMapper.DELETE_DATABASE_COMPN_TBL_INFO_DISTRIBUTE_TARGET] 배포대상 과거 데이터  삭제 (데이터베이스 테이블 컴포넌트 정보)*/
		DELETE
		FROM
			DATABASE_COMPN_TBL_INFO
		WHERE
			COMPN_SEQ IN (
			SELECT
				D.COMPN_SEQ
			FROM
				RUTE_INFO R,
				DATABASE_COMPN_INFO D
			WHERE
				R.RUTE_SEQ = D.RUTE_SEQ
				AND R.RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
		)
	</delete>
	<insert id="INSERT_DATABASE_COMPN_TBL_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.INSERT_DATABASE_COMPN_TBL_INFO_DISTRIBUTE_TARGET] WORK 테이블 => 배포 테이블 등록 (데이터베이스 테이블 컴포넌트 정보)*/
		INSERT INTO DATABASE_COMPN_TBL_INFO(TBL_SEQ, COMPN_SEQ, TABLE_ORDER, REFRN_KEY_NM, INQIRE_SQL, SUCCES_PROCESS_SQL, FAILR_PROCESS_SQL, LDADNG_TY, LDADNG_TABLE_NM, LDADNG_COLUMN, LDADNG_KEY_COLUMN,
		REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT TBL_SEQ, COMPN_SEQ, TABLE_ORDER, REFRN_KEY_NM, INQIRE_SQL, SUCCES_PROCESS_SQL, FAILR_PROCESS_SQL, LDADNG_TY, LDADNG_TABLE_NM, LDADNG_COLUMN, LDADNG_KEY_COLUMN,
		REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP
		FROM DATABASE_COMPN_TBL_INFO_WORK
		WHERE
			COMPN_SEQ IN (
			SELECT
				D.COMPN_SEQ
			FROM
				RUTE_INFO_WORK R,
				DATABASE_COMPN_INFO_WORK D
			WHERE
				R.RUTE_SEQ = D.RUTE_SEQ
				AND R.RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
		)
	</insert>
	<delete id="DELETE_FILE_COMPN_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_FILE_COMPN_INFO_DISTRIBUTE_TARGET] 배포대상 과거 데이터  삭제 (파일  컴포넌트 정보)*/
		DELETE FROM FILE_COMPN_INFO
		WHERE RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</delete>
	<insert id="INSERT_FILE_COMPN_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.INSERT_FILE_COMPN_INFO_DISTRIBUTE_TARGET] WORK 테이블 => 배포 테이블 등록  (파일  컴포넌트 정보)*/
		INSERT INTO FILE_COMPN_INFO(COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, REFER_MAP_KEY, ROOT_DRCTRY, SUB_DRCTRY_SEND_YN, SUB_DRCTRY_MNMM_DP, SUB_DRCTRY_MXMM_DP, SUB_DRCTRY_PTTRN, SORT_SE, READ_LOK_INTRVL, COMPT_FILE_NM, ETY_FILE_SEND_YN, EQLTY_DATA_DETECT_YN, EQLTY_DATA_DETECT_PTTRN, FILE_READ_TY, PARTITN_SIZE, LINE_SPRTR, COLUMN_SPRTR, CHARCR_SET, HDER_COLUMN, HDER_COLUMN_LT, HDER_SKIP_YN, BLANK_CHARCR, RECPTN_FILE_NM, PARLEL_PROCESS_CO, CMPRS_YN, FILE_INCLS_PTTRN, FILE_EXCL_PTTRN, SUCCES_PROCESS_TY, SUCCES_FILE_PTH, ERROR_PROCESS_TY, ERROR_FILE_PTH, DPLCT_PROCESS_TY, DPLCT_FILE_PTH, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, REFER_MAP_KEY, ROOT_DRCTRY, SUB_DRCTRY_SEND_YN, SUB_DRCTRY_MNMM_DP, SUB_DRCTRY_MXMM_DP, SUB_DRCTRY_PTTRN, SORT_SE, READ_LOK_INTRVL, COMPT_FILE_NM, ETY_FILE_SEND_YN, EQLTY_DATA_DETECT_YN, EQLTY_DATA_DETECT_PTTRN, FILE_READ_TY, PARTITN_SIZE, LINE_SPRTR, COLUMN_SPRTR, CHARCR_SET, HDER_COLUMN, HDER_COLUMN_LT, HDER_SKIP_YN, BLANK_CHARCR, RECPTN_FILE_NM, PARLEL_PROCESS_CO, CMPRS_YN, FILE_INCLS_PTTRN, FILE_EXCL_PTTRN, SUCCES_PROCESS_TY, SUCCES_FILE_PTH, ERROR_PROCESS_TY, ERROR_FILE_PTH, DPLCT_PROCESS_TY, DPLCT_FILE_PTH, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP
		FROM FILE_COMPN_INFO_WORK
		WHERE RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</insert>
	<delete id="DELETE_HBASE_COMPN_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_HBASE_COMPN_INFO_DISTRIBUTE_TARGET] 배포대상 과거 데이터  삭제 (HBASE 컴포넌트 정보)*/
		DELETE FROM HBASE_COMPN_INFO
		WHERE RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</delete>
	<insert id="INSERT_HBASE_COMPN_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.INSERT_HBASE_COMPN_INFO_DISTRIBUTE_TARGET] WORK 테이블 => 배포 테이블 등록  (HBASE 컴포넌트 정보)*/
		INSERT INTO HBASE_COMPN_INFO(COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, DTASRC_ID, REFRN_KEY_NM, LDADNG_TABLE_NM, ROW_KEY, LDADNG_COLUMN, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, DTASRC_ID, REFRN_KEY_NM, LDADNG_TABLE_NM, ROW_KEY, LDADNG_COLUMN, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP
		FROM HBASE_COMPN_INFO_WORK
		WHERE RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</insert>

	<delete id="DELETE_HTTP_COMPN_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_HTTP_COMPN_INFO_DISTRIBUTE_TARGET] 배포대상 과거 데이터  삭제 (HTTP 컴포넌트 정보)*/
		DELETE FROM HTTP_COMPN_INFO
		WHERE RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</delete>
	<insert id="INSERT_HTTP_COMPN_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.INSERT_HTTP_COMPN_INFO_DISTRIBUTE_TARGET] WORK 테이블 => 배포 테이블 등록  (HTTP 컴포넌트 정보)*/
		INSERT INTO HTTP_COMPN_INFO(COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, DTASRC_ID, URL, METHOD, HEADER, QUERY_PARAMTR, BODY_TMPLAT, AGGREGATION_TY, AGGREGATION_EPRSS, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, DTASRC_ID, URL, METHOD, HEADER, QUERY_PARAMTR, BODY_TMPLAT, AGGREGATION_TY, AGGREGATION_EPRSS, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP
		FROM HTTP_COMPN_INFO_WORK
		WHERE RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</insert>

	<delete id="DELETE_FTP_COMPN_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_FTP_COMPN_INFO_DISTRIBUTE_TARGET] 배포대상 과거 데이터  삭제 (FTP 컴포넌트 정보)*/
		DELETE FROM FTP_COMPN_INFO
		WHERE RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</delete>
	<insert id="INSERT_FTP_COMPN_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.INSERT_FTP_COMPN_INFO_DISTRIBUTE_TARGET] WORK 테이블 => 배포 테이블 등록  (FTP 컴포넌트 정보)*/
		INSERT INTO FTP_COMPN_INFO(COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, DTASRC_ID, TRANSFER_SE, REFER_MAP_KEY, ROOT_DRCTRY, SUB_DRCTRY_SEND_YN, SUB_DRCTRY_MNMM_DP, SUB_DRCTRY_MXMM_DP, SUB_DRCTRY_PTTRN, SORT_SE, READ_LOK_INTRVL, COMPT_FILE_NM, ETY_FILE_SEND_YN, EQLTY_DATA_DETECT_YN, EQLTY_DATA_DETECT_PTTRN, FILE_READ_TY, PARTITN_SIZE, LINE_SPRTR, COLUMN_SPRTR, CHARCR_SET, HDER_COLUMN, HDER_COLUMN_LT, HDER_SKIP_YN, BLANK_CHARCR, RECPTN_FILE_NM, PARLEL_PROCESS_CO, CMPRS_YN, FILE_INCLS_PTTRN, FILE_EXCL_PTTRN, SUCCES_PROCESS_TY, SUCCES_FILE_PTH, ERROR_PROCESS_TY, ERROR_FILE_PTH, DPLCT_PROCESS_TY, DPLCT_FILE_PTH, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, DTASRC_ID, TRANSFER_SE, REFER_MAP_KEY, ROOT_DRCTRY, SUB_DRCTRY_SEND_YN, SUB_DRCTRY_MNMM_DP, SUB_DRCTRY_MXMM_DP, SUB_DRCTRY_PTTRN, SORT_SE, READ_LOK_INTRVL, COMPT_FILE_NM, ETY_FILE_SEND_YN, EQLTY_DATA_DETECT_YN, EQLTY_DATA_DETECT_PTTRN, FILE_READ_TY, PARTITN_SIZE, LINE_SPRTR, COLUMN_SPRTR, CHARCR_SET, HDER_COLUMN, HDER_COLUMN_LT, HDER_SKIP_YN, BLANK_CHARCR, RECPTN_FILE_NM, PARLEL_PROCESS_CO, CMPRS_YN, FILE_INCLS_PTTRN, FILE_EXCL_PTTRN, SUCCES_PROCESS_TY, SUCCES_FILE_PTH, ERROR_PROCESS_TY, ERROR_FILE_PTH, DPLCT_PROCESS_TY, DPLCT_FILE_PTH, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP
		FROM FTP_COMPN_INFO_WORK
		WHERE RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</insert>


	<delete id="DELETE_RUTE_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_RUTE_INFO_DISTRIBUTE_TARGET] 배포대상 과거 데이터  삭제 (라우트 정보) */
		DELETE FROM RUTE_INFO
		WHERE INTRFC_ID = #{intrfcId}
	</delete>
	<insert id="INSERT_RUTE_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.INSERT_RUTE_INFO_DISTRIBUTE_TARGET] WORK 테이블 => 배포 테이블 등록  (라우트 정보)*/
		INSERT INTO RUTE_INFO(RUTE_SEQ, INTRFC_ID, RUTE_ORDER, AGENT_ID, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT RUTE_SEQ, INTRFC_ID, RUTE_ORDER, AGENT_ID, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP
		FROM RUTE_INFO_WORK
		WHERE RUTE_SEQ IN (SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId})
	</insert>
	<delete id="DELETE_SCHDUL_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_SCHDUL_INFO_DISTRIBUTE_TARGET] 배포대상 과거 데이터  삭제 (스케줄 정보)*/
		DELETE FROM SCHDUL_INFO
		WHERE SCHDUL_ID = 'SC_'||#{intrfcId}
	</delete>
	<insert id="INSERT_SCHDUL_INFO_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.INSERT_SCHDUL_INFO_DISTRIBUTE_TARGET] WORK 테이블 => 배포 테이블 등록  (스케줄 정보)*/
		INSERT INTO SCHDUL_INFO(AGENT_ID, SCHDUL_ID, SCHDUL_NM, EXECUT_TRGET_SE, EXECUT_TRGET_NM, SCHDUL_EXECUT_SE, SECND, MIN, HOUR, DE, MT, DAY, YY, ACTVTY_YN, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT AGENT_ID, SCHDUL_ID, SCHDUL_NM, EXECUT_TRGET_SE, EXECUT_TRGET_NM, SCHDUL_EXECUT_SE, SECND, MIN, HOUR, DE, MT, DAY, YY, ACTVTY_YN, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP
		FROM SCHDUL_INFO_WORK
		WHERE SCHDUL_ID = 'SC_'||#{intrfcId}
	</insert>
	<delete id="DELETE_AGENT_COMPN_INFO_WORK_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_AGENT_COMPN_INFO_WORK_DISTRIBUTE_TARGET] WORK테이블 삭제 */
		DELETE FROM AGENT_COMPN_INFO_WORK WHERE RUTE_SEQ IN
		<foreach collection="ruteSeqList" item="inValue" open="(" close=")" separator=",">
		${inValue}
		</foreach>
	</delete>
	<delete id="DELETE_DATABASE_COMPN_INFO_WORK_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_DATABASE_COMPN_INFO_WORK_DISTRIBUTE_TARGET] WORK테이블 삭제 */
		DELETE FROM DATABASE_COMPN_INFO_WORK WHERE RUTE_SEQ IN
		<foreach collection="ruteSeqList" item="inValue" open="(" close=")" separator=",">
		${inValue}
		</foreach>
	</delete>
	<delete id="DELETE_DATABASE_COMPN_TBL_INFO_WORK_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_DATABASE_COMPN_TBL_INFO_WORK_DISTRIBUTE_TARGET] WORK테이블 삭제 */
		DELETE FROM DATABASE_COMPN_TBL_INFO_WORK WHERE RUTE_SEQ IN
		<foreach collection="ruteSeqList" item="inValue" open="(" close=")" separator=",">
		${inValue}
		</foreach>
	</delete>
	<delete id="DELETE_FILE_COMPN_INFO_WORK_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_FILE_COMPN_INFO_WORK_DISTRIBUTE_TARGET] WORK테이블 삭제 */
		DELETE FROM FILE_COMPN_INFO_WORK WHERE RUTE_SEQ IN
		<foreach collection="ruteSeqList" item="inValue" open="(" close=")" separator=",">
		${inValue}
		</foreach>
	</delete>
	<delete id="DELETE_HBASE_COMPN_INFO_WORK_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_HBASE_COMPN_INFO_WORK_DISTRIBUTE_TARGET] WORK테이블 삭제 */
		DELETE FROM HBASE_COMPN_INFO_WORK WHERE RUTE_SEQ IN
		<foreach collection="ruteSeqList" item="inValue" open="(" close=")" separator=",">
		${inValue}
		</foreach>
	</delete>
	<delete id="DELETE_RUTE_INFO_WORK_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_RUTE_INFO_WORK_DISTRIBUTE_TARGET] WORK테이블 삭제 */
		DELETE FROM RUTE_INFO_WORK WHERE RUTE_SEQ IN
		<foreach collection="ruteSeqList" item="inValue" open="(" close=")" separator=",">
		${inValue}
		</foreach>
	</delete>
	<delete id="DELETE_SCHDUL_INFO_WORK_DISTRIBUTE_TARGET">
		/* [RouteConfigMapper.DELETE_SCHDUL_INFO_WORK_DISTRIBUTE_TARGET] WORK테이블 삭제 */
		DELETE FROM SCHDUL_INFO_WORK WHERE SCHDUL_ID = 'SC_'||#{intrfcId}
	</delete>

	<select id="SELECT_RUTE_INFO_WORK_RUTE_SEQ_LIST" resultType="Integer">
		SELECT RUTE_SEQ FROM RUTE_INFO_WORK WHERE INTRFC_ID = #{intrfcId}
	</select>

	<update id="UPDATE_INTRFC_INFO_YN_WORK" parameterType="com.b2en.integration.aster.model.system.interfaces.InterfaceConfig">
		/* [RouteConfigMapper.UPDATE_INTRFC_INFO]  인터페이스 YN 정보 수정*/
		UPDATE INTRFC_INFO SET
			SYNC_YN = SYNC_YN_WORK,
			ACTVTY_YN  = ACTVTY_YN_WORK,
			TRNSC_LOG_YN = TRNSC_LOG_YN_WORK,
			MSSAGE_LOG_YN = MSSAGE_LOG_YN_WORK
		WHERE INTRFC_ID = #{intrfcId}
	</update>

	<select id="SELECT_COMPN_INFO_LIST" resultType="com.b2en.integration.aster.console.util.UpperKeyMap">
		/* [RouteConfigMapper.SELECT_COMPN_INFO_LIST] 라우트를 구성하는 컴포넌트들의 기본정보를 조회 */
		SELECT COMPONENT.RUTE_SEQ, COMPONENT.NEXT_COMPN_SEQ, COMPONENT.ENDPNT_SE, COMPONENT.COMPN_SEQ, COMPONENT.COMPONENT_TYPE, R.INTRFC_ID, ${newRuteSeq} AS NEW_RUTE_SEQ
		FROM(
			SELECT RUTE_SEQ, NEXT_COMPN_SEQ, ENDPNT_SE, COMPN_SEQ, 'AGENT' AS COMPONENT_TYPE
			FROM  AGENT_COMPN_INFO${tablePostFix}
			UNION ALL
			SELECT RUTE_SEQ, NEXT_COMPN_SEQ, ENDPNT_SE, COMPN_SEQ, 'DATABASE' AS COMPONENT_TYPE
			FROM  DATABASE_COMPN_INFO${tablePostFix}
			UNION ALL
			SELECT RUTE_SEQ, NEXT_COMPN_SEQ, ENDPNT_SE, COMPN_SEQ, 'HBASE' AS COMPONENT_TYPE
			FROM  HBASE_COMPN_INFO${tablePostFix}
			UNION ALL
			SELECT RUTE_SEQ, NEXT_COMPN_SEQ, ENDPNT_SE, COMPN_SEQ, 'FILE' AS COMPONENT_TYPE
			FROM  FILE_COMPN_INFO${tablePostFix}
			UNION ALL
			SELECT RUTE_SEQ, NEXT_COMPN_SEQ, ENDPNT_SE, COMPN_SEQ, 'HTTP' AS COMPONENT_TYPE
			FROM  HTTP_COMPN_INFO${tablePostFix}
			UNION ALL
			SELECT RUTE_SEQ, NEXT_COMPN_SEQ, ENDPNT_SE, COMPN_SEQ, 'FTP' AS COMPONENT_TYPE
			FROM  FTP_COMPN_INFO${tablePostFix}
		) COMPONENT, RUTE_INFO${tablePostFix} R
		WHERE R.RUTE_SEQ = COMPONENT.RUTE_SEQ
		<if test="ruteSeq > 0">
		AND COMPONENT.RUTE_SEQ = #{ruteSeq}
		</if>
		ORDER BY RUTE_SEQ, ENDPNT_SE, NEXT_COMPN_SEQ DESC
	</select>
	<select id="SELECT_FILE_COMPN_INFO_LIST" resultType="com.b2en.integration.aster.model.route.FileComponentConfig">
		/* [RouteConfigMapper.SELECT_FILE_COMPN_INFO_LIST]  파일 컴포넌트 정보 조회 */
		SELECT
			D.COMPN_SEQ,
			D.NEXT_COMPN_SEQ,
			D.RUTE_SEQ,
			D.ENDPNT_SE,
			D.REFER_MAP_KEY,
			D.ROOT_DRCTRY,
			D.SUB_DRCTRY_SEND_YN,
			D.SUB_DRCTRY_MNMM_DP,
			D.SUB_DRCTRY_MXMM_DP,
			D.SUB_DRCTRY_PTTRN,
			D.SORT_SE,
			D.READ_LOK_INTRVL,
			D.COMPT_FILE_NM,
			D.ETY_FILE_SEND_YN,
			D.EQLTY_DATA_DETECT_YN,
			D.EQLTY_DATA_DETECT_PTTRN,
			D.FILE_READ_TY,
			D.PARTITN_SIZE,
			D.LINE_SPRTR,
			D.COLUMN_SPRTR,
			D.CHARCR_SET,
			D.PARLEL_PROCESS_CO,
			D.CMPRS_YN,
			D.FILE_INCLS_PTTRN,
			D.FILE_EXCL_PTTRN,
			D.SUCCES_PROCESS_TY,
			D.SUCCES_FILE_PTH,
			D.ERROR_PROCESS_TY,
			D.ERROR_FILE_PTH,
			D.DPLCT_PROCESS_TY,
			D.DPLCT_FILE_PTH,
			D.COMPN_NM,
			D.COMPN_POSITION,
			D.REGIST_DT,
			D.REGIST_ID,
			D.REGIST_IP,
			D.UPDT_DT,
			D.UPDT_ID,
			D.UPDT_IP,
			D.HDER_COLUMN,
			D.HDER_COLUMN_LT,
			D.HDER_SKIP_YN,
			D.BLANK_CHARCR,
			D.RECPTN_FILE_NM
		FROM FILE_COMPN_INFO${tablePostFix} D, RUTE_INFO${tablePostFix} R
		WHERE D.RUTE_SEQ = R.RUTE_SEQ
		<if test="agentId != null">
		AND R.AGENT_ID = #{agentId}
		</if>
		<if test="intrfcId != null">
		AND R.INTRFC_ID = #{intrfcId}
		</if>
	</select>
	<select id="SELECT_AGENT_COMPN_INFO_LIST" resultType="com.b2en.integration.aster.model.route.AgentComponentConfig">
		/* [RouteConfigMapper.SELECT_AGENT_COMPN_INFO_LIST]  에이전트 컴포넌트 정보 조회 */
		SELECT
			D.COMPN_SEQ,
			D.NEXT_COMPN_SEQ,
			D.RUTE_SEQ,
			D.ENDPNT_SE,
			D.REFER_AGENT_ID,
			D.ENCPT_TY,
			D.CMPRS_YN,
			D.COMPN_NM,
			D.COMPN_POSITION,
			D.REGIST_DT,
			D.REGIST_ID,
			D.REGIST_IP,
			D.UPDT_DT,
			D.UPDT_ID,
			D.UPDT_IP
		FROM AGENT_COMPN_INFO${tablePostFix} D, RUTE_INFO${tablePostFix} R
		WHERE D.RUTE_SEQ = R.RUTE_SEQ
		<if test="agentId != null">
		AND R.AGENT_ID = #{agentId}
		</if>
		<if test="intrfcId != null">
		AND R.INTRFC_ID = #{intrfcId}
		</if>
	</select>
	<select id="SELECT_DATABASE_COMPN_INFO_LIST" resultType="com.b2en.integration.aster.model.route.DatabaseComponentConfig">
		/* [RouteConfigMapper.SELECT_DATABASE_COMPN_INFO_LIST] 데이터베이스 컴포넌트 정보 조회 */
		SELECT
			D.COMPN_SEQ
			,D.NEXT_COMPN_SEQ
			,D.RUTE_SEQ
			,D.ENDPNT_SE
			,D.DTASRC_ID
			,D.PARAMTR_INPUT_SE
			,D.SQL_PARAMTR
			,D.ATMC_REHNDL_SE
			,D.COMPN_NM
			,D.COMPN_POSITION
			,D.REGIST_DT
			,D.REGIST_ID
			,D.REGIST_IP
			,D.UPDT_DT
			,D.UPDT_ID
			,D.UPDT_IP
		FROM
			DATABASE_COMPN_INFO${tablePostFix} D, RUTE_INFO${tablePostFix} R
		WHERE D.RUTE_SEQ = R.RUTE_SEQ
		<if test="agentId != null">
		AND R.AGENT_ID = #{agentId}
		</if>
		<if test="intrfcId != null">
		AND R.INTRFC_ID = #{intrfcId}
		</if>
	</select>
	<select id="SELECT_DATABASE_COMPN_TBL_INFO_LIST" resultType="com.b2en.integration.aster.model.route.DatabaseComponentTableConfig">
		/* [RouteConfigMapper.SELECT_DATABASE_COMPN_TBL_INFO_LIST] 데이터베이스 컴포넌트 테이블 정보 조회 */
		SELECT
			D.TBL_SEQ
			,D.COMPN_SEQ
			,D.TABLE_ORDER
			,D.REFRN_KEY_NM
			,D.INQIRE_SQL
    		,D.SUCCES_PROCESS_SQL
    		,D.FAILR_PROCESS_SQL
			,D.LDADNG_TY
			,D.LDADNG_TABLE_NM
			,D.LDADNG_COLUMN
			,D.LDADNG_KEY_COLUMN
			,D.REGIST_DT
			,D.REGIST_ID
			,D.REGIST_IP
			,D.UPDT_DT
			,D.UPDT_ID
			,D.UPDT_IP
		FROM
			DATABASE_COMPN_TBL_INFO${tablePostFix} D
		WHERE D.COMPN_SEQ IN
		<foreach collection="compnSeqList" item="inValue" open="(" close=")" separator=",">
		${inValue}
		</foreach>
	</select>
	<select id="SELECT_HBASE_COMPN_INFO_LIST" resultType="com.b2en.integration.aster.model.route.HbaseComponentConfig">
		/* [RouteConfigMapper.SELECT_HBASE_COMPN_INFO_LIST] HBASE 컴포넌트 정보 조회 */
		SELECT
			D.COMPN_SEQ,
			D.NEXT_COMPN_SEQ,
			D.RUTE_SEQ,
			D.ENDPNT_SE,
			D.DTASRC_ID,
			D.REFRN_KEY_NM,
			D.LDADNG_TABLE_NM,
			D.ROW_KEY,
			D.LDADNG_COLUMN,
			D.COMPN_NM,
			D.COMPN_POSITION,
			D.REGIST_DT,
			D.REGIST_ID,
			D.REGIST_IP,
			D.UPDT_DT,
			D.UPDT_ID,
			D.UPDT_IP
		FROM
			HBASE_COMPN_INFO${tablePostFix} D, RUTE_INFO${tablePostFix} R
		WHERE D.RUTE_SEQ = R.RUTE_SEQ
		<if test="agentId != null">
		AND R.AGENT_ID = #{agentId}
		</if>
		<if test="intrfcId != null">
		AND R.INTRFC_ID = #{intrfcId}
		</if>
	</select>
	<select id="SELECT_HTTP_COMPN_INFO_LIST" resultType="com.b2en.integration.aster.model.route.HttpComponentConfig">
		/* [RouteConfigMapper.SELECT_HTTP_COMPN_INFO_LIST] HTTP 컴포넌트 정보 조회 */
		SELECT
			D.COMPN_SEQ
			, D.NEXT_COMPN_SEQ
			, D.RUTE_SEQ
			, D.ENDPNT_SE
			, D.DTASRC_ID
			, D.URL
			, D.METHOD
			, D.HEADER
			, D.QUERY_PARAMTR
			, D.BODY_TMPLAT
			, D.AGGREGATION_TY
			, D.AGGREGATION_EPRSS
			, D.REGIST_DT
			, D.REGIST_ID
			, D.REGIST_IP
			, D.UPDT_DT
			, D.UPDT_ID
			, D.UPDT_IP
			, D.COMPN_NM
			, D.COMPN_POSITION
		FROM
			HTTP_COMPN_INFO${tablePostFix} D, RUTE_INFO${tablePostFix} R
		WHERE D.RUTE_SEQ = R.RUTE_SEQ
		<if test="agentId != null">
		AND R.AGENT_ID = #{agentId}
		</if>
		<if test="intrfcId != null">
		AND R.INTRFC_ID = #{intrfcId}
		</if>
	</select>

	<select id="SELECT_FTP_COMPN_INFO_LIST" resultType="com.b2en.integration.aster.model.route.FtpComponentConfig">
		/* [RouteConfigMapper.SELECT_FTP_COMPN_INFO_LIST]  FTP 컴포넌트 정보 조회 */
		SELECT
			D.COMPN_SEQ,
			D.NEXT_COMPN_SEQ,
			D.RUTE_SEQ,
			D.ENDPNT_SE,
			D.DTASRC_ID,
			D.TRANSFER_SE,
			D.REFER_MAP_KEY,
			D.ROOT_DRCTRY,
			D.SUB_DRCTRY_SEND_YN,
			D.SUB_DRCTRY_MNMM_DP,
			D.SUB_DRCTRY_MXMM_DP,
			D.SUB_DRCTRY_PTTRN,
			D.SORT_SE,
			D.READ_LOK_INTRVL,
			D.COMPT_FILE_NM,
			D.ETY_FILE_SEND_YN,
			D.EQLTY_DATA_DETECT_YN,
			D.EQLTY_DATA_DETECT_PTTRN,
			D.FILE_READ_TY,
			D.PARTITN_SIZE,
			D.LINE_SPRTR,
			D.COLUMN_SPRTR,
			D.CHARCR_SET,
			D.PARLEL_PROCESS_CO,
			D.CMPRS_YN,
			D.FILE_INCLS_PTTRN,
			D.FILE_EXCL_PTTRN,
			D.SUCCES_PROCESS_TY,
			D.SUCCES_FILE_PTH,
			D.ERROR_PROCESS_TY,
			D.ERROR_FILE_PTH,
			D.DPLCT_PROCESS_TY,
			D.DPLCT_FILE_PTH,
			D.COMPN_NM,
			D.COMPN_POSITION,
			D.REGIST_DT,
			D.REGIST_ID,
			D.REGIST_IP,
			D.UPDT_DT,
			D.UPDT_ID,
			D.UPDT_IP,
			D.HDER_COLUMN,
			D.HDER_COLUMN_LT,
			D.HDER_SKIP_YN,
			D.BLANK_CHARCR,
			D.RECPTN_FILE_NM
		FROM FTP_COMPN_INFO${tablePostFix} D, RUTE_INFO${tablePostFix} R
		WHERE D.RUTE_SEQ = R.RUTE_SEQ
		<if test="agentId != null">
		AND R.AGENT_ID = #{agentId}
		</if>
		<if test="intrfcId != null">
		AND R.INTRFC_ID = #{intrfcId}
		</if>
	</select>
	<select id="SELECT_INTRFC_INFO_LIST2" resultType="com.b2en.integration.aster.model.system.interfaces.InterfaceConfig">
		/* [RouteConfigMapper.SELECT_INTRFC_INFO_LIST2]  인터페이스 정보 조회 */
		SELECT
			INTRFC_ID
			,INTRFC_NM
			,INTRFC_TY
			,SYNC_YN
			,ACTVTY_YN
			,TRNSC_LOG_YN
			,MSSAGE_LOG_YN
			,LAST_DSTB_VER
			,REGIST_DT
			,REGIST_ID
			,REGIST_IP
			,UPDT_DT
			,UPDT_ID
			,UPDT_IP
		FROM
			INTRFC_INFO
	</select>
	<select id="COPY_AGENT_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.AgentComponentConfig">
		/* [RouteConfigMapper.COPY_AGENT_COMPN_INFO] */
		INSERT INTO AGENT_COMPN_INFO_WORK (COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, REFER_AGENT_ID, ENCPT_TY,  CMPRS_YN, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT #{newCompnSeq}, #{newNextCompnSeq}, #{ruteSeq}, ENDPNT_SE, REFER_AGENT_ID, ENCPT_TY, CMPRS_YN, COMPN_NM, COMPN_POSITION, #{registDt}, #{registId}, #{registIp}, #{updtDt}, #{updtId}, #{updtIp}
		FROM AGENT_COMPN_INFO
		WHERE COMPN_SEQ = #{compnSeq}
	</select>
	<select id="COPY_DATABASE_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.DatabaseComponentConfig">
		/* [RouteConfigMapper.COPY_DATABASE_COMPN_INFO] */
		INSERT INTO DATABASE_COMPN_INFO_WORK (COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, DTASRC_ID, PARAMTR_INPUT_SE, SQL_PARAMTR, ATMC_REHNDL_SE, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT #{newCompnSeq}, #{newNextCompnSeq}, #{ruteSeq}, ENDPNT_SE, DTASRC_ID, PARAMTR_INPUT_SE, SQL_PARAMTR, ATMC_REHNDL_SE, COMPN_NM, COMPN_POSITION, #{registDt}, #{registId}, #{registIp}, #{updtDt}, #{updtId}, #{updtIp}
		FROM DATABASE_COMPN_INFO
		WHERE COMPN_SEQ = #{compnSeq}
	</select>
	<select id="COPY_DATABASE_TBL_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.DatabaseComponentConfig">
		/* [RouteConfigMapper.COPY_DATABASE_TBL_COMPN_INFO] */
		INSERT INTO DATABASE_COMPN_TBL_INFO_WORK (TBL_SEQ, COMPN_SEQ, TABLE_ORDER, REFRN_KEY_NM, INQIRE_SQL, SUCCES_PROCESS_SQL, FAILR_PROCESS_SQL, LDADNG_TY, LDADNG_TABLE_NM, LDADNG_COLUMN, LDADNG_KEY_COLUMN,  REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT #{newDatabaseTblSeq}, #{newCompnSeq}, TABLE_ORDER, REFRN_KEY_NM, INQIRE_SQL, SUCCES_PROCESS_SQL, FAILR_PROCESS_SQL, LDADNG_TY, LDADNG_TABLE_NM, LDADNG_COLUMN, LDADNG_KEY_COLUMN,  #{registDt}, #{registId}, #{registIp}, #{updtDt}, #{updtId}, #{updtIp}
		FROM DATABASE_COMPN_TBL_INFO
		WHERE
			COMPN_SEQ = #{compnSeq}
			AND TBL_SEQ = #{tblSeq}
			AND TABLE_ORDER = #{tableOrder}
	</select>
	<select id="COPY_HBASE_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.DatabaseComponentConfig">
		/* [RouteConfigMapper.COPY_HBASE_COMPN_INFO] */
		INSERT INTO HBASE_COMPN_INFO_WORK (COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, DTASRC_ID, REFRN_KEY_NM, LDADNG_TABLE_NM, ROW_KEY, LDADNG_COLUMN, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT #{newCompnSeq}, #{newNextCompnSeq}, #{ruteSeq}, ENDPNT_SE, DTASRC_ID, REFRN_KEY_NM, LDADNG_TABLE_NM, ROW_KEY, LDADNG_COLUMN, COMPN_NM, COMPN_POSITION, #{registDt}, #{registId}, #{registIp}, #{updtDt}, #{updtId}, #{updtIp}
		FROM HBASE_COMPN_INFO
		WHERE COMPN_SEQ = #{compnSeq}
	</select>
	<select id="COPY_FILE_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.DatabaseComponentConfig">
		/* [RouteConfigMapper.COPY_FILE_COMPN_INFO] */
		INSERT INTO FILE_COMPN_INFO_WORK (COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, REFER_MAP_KEY, ROOT_DRCTRY, SUB_DRCTRY_SEND_YN, SUB_DRCTRY_MNMM_DP, SUB_DRCTRY_MXMM_DP, SUB_DRCTRY_PTTRN, SORT_SE, READ_LOK_INTRVL, COMPT_FILE_NM, ETY_FILE_SEND_YN, EQLTY_DATA_DETECT_YN, EQLTY_DATA_DETECT_PTTRN, FILE_READ_TY, PARTITN_SIZE, LINE_SPRTR, COLUMN_SPRTR, CHARCR_SET, HDER_COLUMN, HDER_COLUMN_LT, HDER_SKIP_YN, BLANK_CHARCR, RECPTN_FILE_NM, PARLEL_PROCESS_CO, CMPRS_YN, FILE_INCLS_PTTRN, FILE_EXCL_PTTRN, SUCCES_PROCESS_TY, SUCCES_FILE_PTH, ERROR_PROCESS_TY, ERROR_FILE_PTH, DPLCT_PROCESS_TY, DPLCT_FILE_PTH, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT #{newCompnSeq}, #{newNextCompnSeq}, #{ruteSeq}, ENDPNT_SE, REFER_MAP_KEY, ROOT_DRCTRY, SUB_DRCTRY_SEND_YN, SUB_DRCTRY_MNMM_DP, SUB_DRCTRY_MXMM_DP, SUB_DRCTRY_PTTRN, SORT_SE, READ_LOK_INTRVL, COMPT_FILE_NM, ETY_FILE_SEND_YN, EQLTY_DATA_DETECT_YN, EQLTY_DATA_DETECT_PTTRN, FILE_READ_TY, PARTITN_SIZE, LINE_SPRTR, COLUMN_SPRTR, CHARCR_SET, HDER_COLUMN, HDER_COLUMN_LT, HDER_SKIP_YN, BLANK_CHARCR, RECPTN_FILE_NM, PARLEL_PROCESS_CO, CMPRS_YN, FILE_INCLS_PTTRN, FILE_EXCL_PTTRN, SUCCES_PROCESS_TY, SUCCES_FILE_PTH, ERROR_PROCESS_TY, ERROR_FILE_PTH, DPLCT_PROCESS_TY, DPLCT_FILE_PTH, COMPN_NM, COMPN_POSITION, #{registDt}, #{registId}, #{registIp}, #{updtDt}, #{updtId}, #{updtIp}
		FROM FILE_COMPN_INFO
		WHERE COMPN_SEQ = #{compnSeq}
	</select>
	<select id="COPY_FTP_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.DatabaseComponentConfig">
		/* [RouteConfigMapper.COPY_FTP_COMPN_INFO] */
		INSERT INTO FTP_COMPN_INFO_WORK (COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, DTASRC_ID, TRANSFER_SE, REFER_MAP_KEY, ROOT_DRCTRY, SUB_DRCTRY_SEND_YN, SUB_DRCTRY_MNMM_DP, SUB_DRCTRY_MXMM_DP, SUB_DRCTRY_PTTRN, SORT_SE, READ_LOK_INTRVL, COMPT_FILE_NM, ETY_FILE_SEND_YN, EQLTY_DATA_DETECT_YN, EQLTY_DATA_DETECT_PTTRN, FILE_READ_TY, PARTITN_SIZE, LINE_SPRTR, COLUMN_SPRTR, CHARCR_SET, HDER_COLUMN, HDER_COLUMN_LT, HDER_SKIP_YN, BLANK_CHARCR, RECPTN_FILE_NM, PARLEL_PROCESS_CO, CMPRS_YN, FILE_INCLS_PTTRN, FILE_EXCL_PTTRN, SUCCES_PROCESS_TY, SUCCES_FILE_PTH, ERROR_PROCESS_TY, ERROR_FILE_PTH, DPLCT_PROCESS_TY, DPLCT_FILE_PTH, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT #{newCompnSeq}, #{newNextCompnSeq}, #{ruteSeq}, ENDPNT_SE, DTASRC_ID, TRANSFER_SE, REFER_MAP_KEY, ROOT_DRCTRY, SUB_DRCTRY_SEND_YN, SUB_DRCTRY_MNMM_DP, SUB_DRCTRY_MXMM_DP, SUB_DRCTRY_PTTRN, SORT_SE, READ_LOK_INTRVL, COMPT_FILE_NM, ETY_FILE_SEND_YN, EQLTY_DATA_DETECT_YN, EQLTY_DATA_DETECT_PTTRN, FILE_READ_TY, PARTITN_SIZE, LINE_SPRTR, COLUMN_SPRTR, CHARCR_SET, HDER_COLUMN, HDER_COLUMN_LT, HDER_SKIP_YN, BLANK_CHARCR, RECPTN_FILE_NM, PARLEL_PROCESS_CO, CMPRS_YN, FILE_INCLS_PTTRN, FILE_EXCL_PTTRN, SUCCES_PROCESS_TY, SUCCES_FILE_PTH, ERROR_PROCESS_TY, ERROR_FILE_PTH, DPLCT_PROCESS_TY, DPLCT_FILE_PTH, COMPN_NM, COMPN_POSITION, #{registDt}, #{registId}, #{registIp}, #{updtDt}, #{updtId}, #{updtIp}
		FROM FTP_COMPN_INFO
		WHERE COMPN_SEQ = #{compnSeq}
	</select>
	<select id="COPY_HTTP_COMPN_INFO" parameterType="com.b2en.integration.aster.model.route.DatabaseComponentConfig">
		/* [RouteConfigMapper.COPY_HTTP_COMPN_INFO] */
		INSERT INTO HTTP_COMPN_INFO_WORK (COMPN_SEQ, NEXT_COMPN_SEQ, RUTE_SEQ, ENDPNT_SE, DTASRC_ID, URL, METHOD, HEADER, QUERY_PARAMTR, BODY_TMPLAT, AGGREGATION_TY, AGGREGATION_EPRSS, COMPN_NM, COMPN_POSITION, REGIST_DT, REGIST_ID, REGIST_IP, UPDT_DT, UPDT_ID, UPDT_IP)
		SELECT #{newCompnSeq}, #{newNextCompnSeq}, #{ruteSeq}, ENDPNT_SE, DTASRC_ID, URL, METHOD, HEADER, QUERY_PARAMTR, BODY_TMPLAT, AGGREGATION_TY, AGGREGATION_EPRSS, COMPN_NM, COMPN_POSITION, #{registDt}, #{registId}, #{registIp}, #{updtDt}, #{updtId}, #{updtIp}
		FROM HTTP_COMPN_INFO
		WHERE COMPN_SEQ = #{compnSeq}
	</select>
	<select id="SELECT_DATABASE_COMPN_TBL_INFO_LIST_COPY_TARGET" resultType="com.b2en.integration.aster.model.route.DatabaseComponentTableConfig">
		/* [RouteConfigMapper.SELECT_DATABASE_COMPN_TBL_INFO_LIST_COPY_TARGET] */
		SELECT
			TBL_SEQ
			,COMPN_SEQ
			,TABLE_ORDER
		FROM
			DATABASE_COMPN_TBL_INFO
		WHERE COMPN_SEQ = #{compnSeq}
	</select>
</mapper>